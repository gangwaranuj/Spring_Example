package com.workmarket.thrift.work.report;

import com.google.common.collect.Maps;
import com.workmarket.thrift.EnumValue;

import java.util.EnumSet;
import java.util.Map;

public enum WorkReportColumnType implements EnumValue {
	WORK_TITLE(0),
	WORK_DESCRIPTION(1),
	WORK_INSTRUCTIONS(2),
	WORK_ADDRESSONSITEFLAG(3),
	WORK_SCHEDULERANGEFLAG(4),
	WORK_SCHEDULEFROM(5),
	WORK_SCHEDULETHROUGH(6),
	WORK_CONTACTNAME(7),
	WORK_CONTACTPHONE(8),
	WORK_CONTACTEMAIL(9),
	WORK_SUPPORTNAME(10),
	WORK_SUPPORTPHONE(11),
	WORK_SUPPORTEMAIL(12),
	WORK_CREATEDON(13),
	WORK_MODIFIEDON(14),
	WORK_WORKSTATUSTYPE_CODE(15),
	WORK_WORKNUMBER(16),
	WORK_TYPE(17),
	WORK_PRICINGSTRATEGY(18),
	WORK_FULFILLMENTSTRATEGY_FLATPRICE(19),
	WORK_MAXFLATPRICE(20),
	WORK_BUYERFEE(21),
	WORK_FULFILLMENTSTRATEGY_WORKPRICE(22),
	WORK_AMOUNTEARNED(23),
	WORK_REFUNDEDAMOUNT(24),
	WORK_VOIDEDAMOUNTEARNED(25),
	WORK_CLOSEDON(26),
	WORK_DUEON(27),
	WORK_ADDITIONALEXPENSES(28),
	WORK_FULLPRICINGSTRATEGY_PER_HOUR_PRICE(29),
	WORK_CLIENT_COMPANY_ID(30),
	WORK_CLIENT_COMPANY_NAME(31),
	WORK_DESIRED_SKILLS(32),
	WORK_WORK_CHANGELOG_COMPLETE_DATE(33),
	WORK_ROUTING_DATE(34),
	WORK_ACCEPTANCE_DATE(35),
	WORK_CLOSE_DATE(36),
	WORK_PAYMENT_DATE(37),
	WORK_RESOURCE_WORK_RESOURCE_STATUS_TYPE_CODE(38),
	WORK_USER_RESOURCE_LAST_NAME(39),
	WORK_ADDRESS1(40),
	WORK_ADDRESS2(41),
	WORK_CITY(42),
	WORK_STATE(43),
	WORK_POSTAL_CODE(44),
	WORK_INDUSTRY(45),
	WORK_TEMPLATE(46),
	WORK_PROJECT_NAME(47),
	WORK_INVOICE_NUMBER(48),
	ASSIGNED_RESOURCE_CITY(49),
	ASSIGNED_RESOURCE_STATE(50),
	ASSIGNED_RESOURCE_POSTAL_CODE(51),
	ASSIGNED_RESOURCE_RATING(52),
	WORK_CURRENT_SUB_STATUSES(53),
	WORK_PAYMENT_TERMS_DAYS(54),
	WORK_RESOLVED_SUB_STATUSES(55),
	WORK_SENT_RESOURCES(56),
	WORK_DECLINED_RESOURCES(57),
	WORK_QUESTIONS_ASKED(58),
	WORK_COUNTER_OFFERS_APPLICATIONS(59),
	WORK_CUSTOM_FIELDS(60),
	WORK_SELECT_ALL(61),
	WORK_SENT_DATE(62),
	WORK_USER_RESOURCE_NAME(63),
	WORK_USER_RESOURCE_ID(64),
	WORK_SPEND_LIMIT(65),
	WORK_INITIAL_PRICE(66),
	WORK_PENDING_SLI_TOTAL(67),
	WORK_PENDING_SLI(68),
	WORK_APPROVED_SLI(69),
	WORK_REJECTED_SLI(70),
	WORK_LOCATION_ID(71),
	WORK_LOCATION_NAME(72),
	WORK_FIRST_CHECKIN(73),
	WORK_LAST_CHECKOUT(74),
	WORK_TIME_ON_SITE(75),
	WORK_PARTS_DESCRIPTION(76),
	WORK_PARTS_SUPPLIED_BY_RESOURCE(77),
	WORK_PARTS_DISTRIBUTION_METHOD(78),
	WORK_PARTS_PICKUP_LOCATION_NUMBER(79),
	WORK_PARTS_PICKUP_LOCATION_NAME(80),
	WORK_PARTS_PICKUP_LOCATION_ADDRESS1(81),
	WORK_PARTS_PICKUP_LOCATION_ADDRESS2(82),
	WORK_PARTS_PICKUP_LOCATION_CITY(83),
	WORK_PARTS_PICKUP_LOCATION_STATE(84),
	WORK_PARTS_PICKUP_LOCATION_POSTAL_CODE(85),
	WORK_PARTS_PICKUP_LOCATION_COUNTRY(86),
	WORK_PARTS_PICKUP_TRACKING_NUMBER(87),
	WORK_PARTS_PICKUP_SHIPPING_PROVIDER(88),
	WORK_PARTS_PICKUP_PART_VALUE(89),
	WORK_PARTS_RETURN_REQUIRED(90),
	WORK_PARTS_RETURN_LOCATION_NUMBER(91),
	WORK_PARTS_RETURN_LOCATION_NAME(92),
	WORK_PARTS_RETURN_LOCATION_ADDRESS1(93),
	WORK_PARTS_RETURN_LOCATION_ADDRESS2(94),
	WORK_PARTS_RETURN_LOCATION_CITY(95),
	WORK_PARTS_RETURN_LOCATION_STATE(96),
	WORK_PARTS_RETURN_LOCATION_POSTAL_CODE(97),
	WORK_PARTS_RETURN_LOCATION_COUNTRY(98),
	WORK_PARTS_RETURN_TRACKING_NUMBER(99),
	WORK_PARTS_RETURN_SHIPPING_PROVIDER(100),
	WORK_PARTS_RETURN_PART_VALUE(101),
	WORK_RESOLUTION(102),
	WORK_BUYER_ID(103),
	WORK_BUYER_FIRST_NAME(104),
	WORK_BUYER_LAST_NAME(105),
	WORK_INVOICE_SUMMARY_NUMBER(106),
	ASSIGNED_RESOURCE_APPOINTMENT_DATE(107),
	WORK_COUNTRY(108),
	PENDING_APPROVAL_SPEND_LIMIT_ON_COMPLETE(109),
	ASSIGNED_RESOURCE_HOURS_WORKED(110),
	WORK_FULLPRICINGSTRATEGY_ADDITIONAL_PER_HOUR_PRICE(111),
	WORK_TOTAL_VALUE(112),
	WORK_CURRENTBUYERFEE(113),
	WORK_INITIALBUYERFEE(114),
	WORK_PENDING_SLI_TOTAL_WITH_FEE(115),
	WORK_TOTAL_BUDGET(116),

	WORK_PENDING_BUDGET_INCREASE(140),
	WORK_APPROVED_BUDGET_INCREASE(141),
	WORK_REJECTED_BUDGET_INCREASE(142),

	WORK_APPROVED_BONUS(145),
	WORK_USER_RESOURCE_FIRST_NAME(150),

	WORK_CHECKIN_DISTANCE(151),
	WORK_CHECKOUT_DISTANCE(152),

	WORK_ROUTING_TYPE(153),

	WORK_CUSTOM_FIELD_ID(154),
	WORK_EXTERNAL_ID_DISPLAYNAME(155),
	WORK_EXTERNAL_ID_VALUE(156),
	LAST_MODIFIED_DISPLAY_NAME(157);


	private final int value;

	private WorkReportColumnType(int value) {
		this.value = value;
	}

	public int getValue() {
		return value;
	}

	private static final Map<Integer, WorkReportColumnType> DICTIONARY = Maps.newHashMap();

	static {
		EnumSet<WorkReportColumnType> enumSet = EnumSet.allOf(WorkReportColumnType.class);
		for (WorkReportColumnType w : enumSet) { DICTIONARY.put(w.getValue(), w); }
	}

	public static WorkReportColumnType findByValue(int value) {
		return DICTIONARY.get(value);
	}
}
