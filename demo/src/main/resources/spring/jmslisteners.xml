<?xml version="1.0" encoding="UTF-8"?>
<!-- beans for services refactor -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	   profile="worker,allinone">

	<bean id="jsmListenerThreadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="30"/>
		<property name="maxPoolSize" value="250"/>
		<property name="daemon" value="true"/>
		<property name="keepAliveSeconds" value="30"/>
	</bean>

	<bean id="notificationListener" class="com.workmarket.service.infra.jms.NotificationListenerImpl"/>
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="emailDestination"/>
		<property name="messageListener" ref="notificationListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="40"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="default"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens for work related notifications -->
	<bean id="workNotificationListener" class="com.workmarket.service.infra.jms.NotificationListenerImpl"/>
	<bean id="workNotificationJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="workEmailDestination"/>
		<property name="messageListener" ref="workNotificationListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="40"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="default"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens for event messages -->
	<bean id="eventListener" class="com.workmarket.service.infra.jms.EventListener"/>
	<bean id="eventJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="eventDestination"/>
		<property name="messageListener" ref="eventListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="40"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="event"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens for regular reindex events -->
	<bean id="reindexEventListener" class="com.workmarket.service.infra.jms.EventListener"/>
	<bean id="reindexEventJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="reindexEventDestination"/>
		<property name="messageListener" ref="reindexEventListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="40"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="event"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens for regular reindex events -->
	<bean id="metricEventListener" class="com.workmarket.service.infra.jms.EventListener"/>
	<bean id="metricEventJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="metricEventDestination"/>
		<property name="messageListener" ref="metricEventListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="40"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="event"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>


	<!-- Listens for reindex ALL type of events (reindexALLWork, reindexALLUsers, etc) -->
	<bean id="jobListener" class="com.workmarket.service.infra.jms.JobListener"/>
	<bean id="jobJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="jobDestination"/>
		<property name="messageListener" ref="jobListener"/>
		<property name="concurrentConsumers" value="2"/>
		<property name="maxConcurrentConsumers" value="5"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="job"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens and executes Banking operations. Example: ACH, PayPal, GCC -->
	<bean id="batchListener" class="com.workmarket.service.infra.jms.BatchListener"/>
	<bean id="batchJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="batchDestination"/>
		<property name="messageListener" ref="batchListener"/>
		<property name="concurrentConsumers" value="2"/>
		<property name="maxConcurrentConsumers" value="5"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="batch"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens and executes WebHooks with third parties -->
	<bean id="integrationListener" class="com.workmarket.service.business.queue.integration.IntegrationListener"/>
	<bean id="integrationJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="integrationDestination"/>
		<property name="messageListener" ref="integrationListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="25"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="integration"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

	<!-- Listens and executes WebHooks with third parties -->
	<bean id="uploadsListener" class="com.workmarket.api.v2.employer.uploads.async.UploadListener"/>
	<bean id="uploadsJMSContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="amqConnectionFactory"/>
		<property name="destination" ref="uploadsDestination"/>
		<property name="messageListener" ref="uploadsListener"/>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="25"/>
		<property name="errorHandler">
			<bean name="batchJmsErrorHandler" class="com.workmarket.service.infra.jms.JmsErrorHandler">
				<constructor-arg value="bulk"/>
			</bean>
		</property>
		<property name="taskExecutor" ref="jsmListenerThreadPoolTaskExecutor"/>
	</bean>

</beans>
