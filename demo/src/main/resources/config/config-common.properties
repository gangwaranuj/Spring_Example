project.version=${version}

baseurl=${baseurl}

sandbox=${sandbox}
sql.data=${sql.data}

solr.baseurl=${solr.baseurl}
solr.slaveBaseurl=${solr.slaveBaseurl}
solr.searchLogUrl=${solr.searchLogUrl}
solr.retry.limit=${solr.retry.limit}
solr.buffer.size=${solr.buffer.size}
solr.work.commit.delay=${solr.work.commit.delay}
solr.globalcore.commit.delay_in_ms=${solr.globalcore.commit.delay_in_ms}
solr.forum.post.commit.delay=${solr.forum.post.commit.delay}
search.queue.delay=${search.queue.delay}

database.batch_size=${database.batch_size}

encryption.salt=${encryption.salt}
encryption.secret=${encryption.secret}

javax.net.ssl.keyStore=${javax.net.ssl.keyStore}
javax.net.ssl.keyStorePassword=${javax.net.ssl.keyStorePassword}
sun.security.ssl.allowUnsafeRenegotiation=${sun.security.ssl.allowUnsafeRenegotiation}

usergroup.adduserstogroup.buffer.size=${usergroup.adduserstogroup.buffer.size}

# Mocks
mailSenderClass=${mailSenderClass}

#JMS
jms.url=${jms.url}

#Mail systems
mail.system.host=${mail.system.host}
mail.invitations.host=${mail.invitations.host}
mail.system2.host=${mail.system2.host}

#Migrations Tool
allow.automatic.migrations=${allow.automatic.migrations}

# Voice
voice.adapterClass=${voice.adapterClass}

# Twilio: clientservice@workmarket.com / labor1
voice.adapter.twilio.apiVersion=${voice.adapter.twilio.apiVersion}
voice.adapter.twilio.accountSID=${voice.adapter.twilio.accountSID}
voice.adapter.twilio.authToken=${voice.adapter.twilio.authToken}
voice.adapter.twilio.callback.url=${voice.adapter.twilio.callback.url}

linkShortener.adapterClass=${linkShortener.adapterClass}

# Make sure to define this in the prod config file
WM_SMS_FROM_NUMBER=${WM_SMS_FROM_NUMBER}
WM_FROM_PHONE_NUMBER=${WM_FROM_PHONE_NUMBER}
WM_REPLY_EMAIL=${WM_REPLY_EMAIL}
WM_NO_REPLY_EMAIL=${WM_NO_REPLY_EMAIL}
WM_SUPPORT_EMAIL=${WM_SUPPORT_EMAIL}
WM_SUPPORT_PHONE_NUMBER=${WM_SUPPORT_PHONE_NUMBER}

geocode.adapterClass=${geocode.adapterClass}
buyerSignUp.adapterClass=${buyerSignUp.adapterClass}
screening.externalServiceClass=${screening.externalServiceClass}
vault.serverServiceClass=${vault.serverServiceClass}

remoteFile.adapterClass=${remoteFile.adapterClass}
remoteFile.location.private=${remoteFile.location.private}
remoteFile.location.public=${remoteFile.location.public}
remoteFile.location.tmp=${remoteFile.location.tmp}
remoteFile.localAssetFileDirectory=${remoteFile.localAssetFileDirectory}
remoteFile.remoteFileEnvironment=${remoteFile.remoteFileEnvironment}
remoteFile.defaultUrlPrefix=${remoteFile.defaultUrlPrefix}
remoteFile.cdnDevProdUrlPrefix=${remoteFile.cdnDevProdUrlPrefix}
remoteFile.cdnProdPublicUrlPrefix=${remoteFile.cdnProdPublicUrlPrefix}
remoteFile.defaultAuthorizedUrlExpiration=${remoteFile.defaultAuthorizedUrlExpiration}
remoteFile.triggerMultipart=${remoteFile.triggerMultipart}
remoteFile.accessKey=${remoteFile.accessKey}
remoteFile.secretKey=${remoteFile.secretKey}

# payment.adapterClass=com.workmarket.service.infra.payment.PayPalPaymentAdapterImpl
payment.adapterClass=${payment.adapterClass}
# This is a sandbox PayPal account associated with my personal developer account.
# The sandbox login (to verify payments, etc.) is: wm_1283696654_biz@amitsnyderman.com / wmlabor1
payment.adapter.paypal.apiUsername=${payment.adapter.paypal.apiUsername}
payment.adapter.paypal.apiPassword=${payment.adapter.paypal.apiPassword}
payment.adapter.paypal.signature=${payment.adapter.paypal.signature}
payment.adapter.paypal.environment=${payment.adapter.paypal.environment}
payment.adapter.paypal.subject=${payment.adapter.paypal.subject}

payment.adapter.firstdata.storeId=${payment.adapter.firstdata.storeId}
payment.adapter.firstdata.username=${payment.adapter.firstdata.username}
payment.adapter.firstdata.password=${payment.adapter.firstdata.password}
#payment.adapter.firstdata.wsdl=https://ws.merchanttest.firstdataglobalgateway.com/fdggwsapi/services/order.wsdl
payment.adapter.firstdata.wsdl=${payment.adapter.firstdata.wsdl}

payment.adapter.globalcashcard.apiUsername=${payment.adapter.globalcashcard.apiUsername}
payment.adapter.globalcashcard.apiPassword=${payment.adapter.globalcashcard.apiPassword}

push.adapter.androidApiKey=${push.adapter.androidApiKey}
push.adapter.appleCertPassword=${push.adapter.appleCertPassword}

app.isTestEnvironment=${app.isTestEnvironment}

#backgroundcheck.adapter.acxiom.wsdl=https://smwreports.sterlingdirect.com/XMLBackgroundTests/Request.asmx?WSDL
backgroundcheck.adapter.acxiom.wsdl=${backgroundcheck.adapter.acxiom.wsdl}
backgroundcheck.adapter.acxiom.requestAction=${backgroundcheck.adapter.acxiom.requestAction}
backgroundcheck.adapter.acxiom.username=${backgroundcheck.adapter.acxiom.username}
backgroundcheck.adapter.acxiom.password=${backgroundcheck.adapter.acxiom.password}
backgroundcheck.adapter.acxiom.package=${backgroundcheck.adapter.acxiom.package}

linkedin.key=${linkedin.key}
linkedin.secret=${linkedin.secret}

facebook.key=${facebook.key}
facebook.secret=${facebook.secret}

google.key=${google.key}
google.secret=${google.secret}
google.scope.calendar=${google.scope.calendar}
google.callback.calendar=${google.callback.calendar}
google.analytics.propertyId=${google.analytics.propertyId}
#recaptcha
google.recaptcha.enabled=${google.recaptcha.enabled}
google.recaptcha.site.key=${google.recaptcha.site.key}
google.recaptcha.secret.key=${google.recaptcha.secret.key}
google.recaptcha.host=${google.recaptcha.host}
google.recaptcha.uri=${google.recaptcha.uri}
google.recaptcha.timeout.connection=${google.recaptcha.timeout.connection}
google.recaptcha.timeout.socket=${google.recaptcha.timeout.socket}
#shorturl
google.shorturl.secret=${google.shorturl.secret}
google.shorturl.timeout.connection=${google.shorturl.timeout.connection}
google.shorturl.timeout.socket=${google.shorturl.timeout.socket}
google.shorturl.uri=${google.shorturl.uri}
google.shorturl.host=${google.shorturl.host}

segment.writekey=${segment.writekey}

salesforce.key=${salesforce.key}
salesforce.secret=${salesforce.secret}
salesforce.callback=${salesforce.callback}
salesforce.leads.id=${salesforce.leads.id}
salesforce.leads.key=${salesforce.leads.key}
salesforce.leads.auth.url=${salesforce.leads.auth.url}
salesforce.leads.generate.url=${salesforce.leads.generate.url}
salesforce.leads.username=${salesforce.leads.username}
salesforce.leads.password=${salesforce.leads.password}

#See WorkServiceImpl
assignment.details.url=${assignment.details.url}
campaign.details.url=${campaign.details.url}

#MBO
mbo.salesforce.endpoint=${mbo.salesforce.endpoint}
mbo.salesforce.username=${mbo.salesforce.username}
mbo.salesforce.password=${mbo.salesforce.password}
mbo.salesforce.securityToken=${mbo.salesforce.securityToken}
mbo.saml.entity=${mbo.saml.entity}
mbo.saml.metadata=${mbo.saml.metadata}
mbo.feedDescription=${mbo.feedDescription}
mbo.opportunityRecordTypeId=${mbo.opportunityRecordTypeId}

#bit.ly
BITLY_USER_NAME=${BITLY_USER_NAME}
BITLY_KEY=${BITLY_KEY}

#aftership
aftership.url=${aftership.url}
aftership.key=${aftership.key}
aftership.gatewayClass=${aftership.gatewayClass}
aftership.webhook.token=${aftership.webhook.token}

#uploads
uploadDirectory=${uploadDirectory}

#generate temporary calendar files
#See CalendarServiceImpl
calendar.path=${calendar.path}

asset.path=${asset.path}
asset.company.path=${asset.company.path}
asset.contract.path=${asset.contract.path}
asset.user.path=${asset.user.path}
asset.work.path=${asset.work.path}
asset.banking.path=${asset.banking.path}
asset.taxentity.path=${asset.taxentity.path}

# Statistics
metrics.console.enabled=${metrics.console.enabled}
metrics.console.period=${metrics.console.period}
metrics.graphite.enabled=${metrics.graphite.enabled}
metrics.graphite.server=${metrics.graphite.server}
metrics.graphite.port=${metrics.graphite.port}
metrics.graphite.period=${metrics.graphite.period}
metrics.graphite.prefix=${metrics.graphite.prefix}

metric.statsd.server=${metric.statsd.server}
metric.statsd.port=${metric.statsd.port}

# Statistics names
com.workmarket.assignment.bulk.success=com.workmarket.assignment.bulk.success
com.workmarket.assignment.bulk.failure=com.workmarket.assignment.bulk.failure
com.workmarket.group.invites=com.workmarket.group.invites
com.workmarket.network.add=com.workmarket.network.add

#
account.register.reconciliation.emails=${account.register.reconciliation.emails}

database.url=${database.url}
slave_database.url=${slave_database.url}
database.username=${database.username}
database.password=${database.password}
database.migration.scripts=${sql.scripts}
database.migration.tmp=${sql.tmp}
database.migration.initVersion=${init.version}
database.migration.initDescription=${init.description}
database.maxidle=${database.maxidle}

percona.command=${percona.command}

# DB migrations
init.on.migrate=true
init.description=Base_Version
migrations.metatable=db_migrations
migrations.placeholder.prefix=\#*^$
migrations.placeholder.suffix=^**^
allow.out.of.order.migrations=false
validate.on.migrate=false
init.version=00000000000000

#Solr boost
people.search.boost.onTimePercentage=10.0
people.search.boost.distance=9.45

people.search.boost.completedWork=5.00
people.search.boost.blocksCount=5.0
people.search.boost.abandonedLabelCount=3.25
people.search.boost.repeatedClients=2.00
people.search.boost.profilePicture=2.50
people.search.boost.backgroundCheck=5.0
people.search.boost.drugTest=3.0
people.search.boost.screeningStatus=10.00
people.search.boost.cancelledLabelCount=1.79
people.search.boost.completedOnTimeLabelCount=1.36
people.search.boost.lateLabelCount=1.34
people.search.boost.paidAssignments=1.17
people.search.boost.satisfactionRate=1.5
people.search.boost.averageStarRating=1.0
people.search.boost.completedWorkForCompanies=2.00
people.search.boost.skillsAssignment=4.54
people.search.boost.lastAssignedWorkDate=3.00

#name and location of the stopword file  that contains a list of words that we'll ignore
search.service.stopword.file=stopwords.txt
people.search.keyword.maxlength=200
thrift.audit=true

# Reporting
reporting.csv.file.location=${reporting.csv.file.location}

healthtest.filename=${healthtest.filename}
healthtest.success=File check success
healthtest.error=File check failed

# DB schemas
wm_market.schema=${wm_market.schema}
wm_marketcore.schema=${wm_marketcore.schema}

# for feedback and other internal mails
internal.mail.host=smtp.gmail.com
internal.mail.port=587
internal.mail.username=test_account_here@workmarket.com
internal.mail.password=test_passwork_here

google.maps.url=http://maps.google.com/maps/api/staticmap

error.recipient=dev@workmarket.com
error.fromUserId=1

# api
api.v1.requireSSL=${api.v1.requireSSL}
api.v2.requireSSL=${api.v2.requireSSL}

api.exceptions.internal_server_error=There was an internal server error.
api.exceptions.forbidden=You are not authorized to perform this action.
api.exceptions.unparseable_request=Unparseable request
api.exceptions.failed_validation=Validation failure

# Autotask test properties
autotask.default.uri=${autotask.default.uri}
autotask.target.namespace=${autotask.target.namespace}

# Redis persistent store
redis.persistent.hostname=${redis.persistent.hostname}
redis.persistent.port=${redis.persistent.port}
redis.persistent.database=${redis.persistent.database}
redis.persistent.timeout=${redis.persistent.timeout}

# Redis cache only store
redis.cacheonly.hostname=${redis.cacheonly.hostname}
redis.cacheonly.port=${redis.cacheonly.port}
redis.cacheonly.database=${redis.cacheonly.database}
redis.cacheonly.timeout=${redis.cacheonly.timeout}

# Desk.com SSO integration
desk.key.site=${desk.key.site}
desk.key.api=${desk.key.api}

# session timeout
session.timeout.in.minutes=${session.timeout.in.minutes}

# recaptcha
recaptcha.publicKey=${recaptcha.publicKey}
recaptcha.privateKey=${recaptcha.privateKey}

# HERE BE DRAGONS
google.geocode.api.url=${google.geocode.api.url}
google.geocode.api.format=${google.geocode.api.format}

# Sugar integration
sugar.username=${sugar.username}
sugar.password=${sugar.password}
sugar.client.id=${sugar.client.id}
sugar.client.secret=${sugar.client.secret}
sugar.client.url=${sugar.client.url}
sugar.client.base_url=${sugar.client.base_url}

# Simple passwords
simple-passwords.file=simple-passwords.txt

contact.email=russell@workmarket.com
contact.name=Russell Sachs

vault.dao=${vault.dao}

vault.service.http.hosts=${vault.service.http.hosts}
http.service.socketTimeout=${http.service.socketTimeout}
http.service.connectionTimeout=${http.service.connectionTimeout}
security.tls.version=${security.tls.version}
security.keystore.keyEntry=${security.keystore.keyEntry}
http.service.maxConnectionsPerRoute=${http.service.maxConnectionsPerRoute}

# CDN
cdn.use.cachebuster=${cdn.use.cachebuster}
cdn.static.url.prefix=${cdn.static.url.prefix}
cache.build.path=${cache.build.path}
manifest.build.path=${manifest.build.path}

# Bulk Employee Upload
bulk.user.upload.size.limit=${bulk.user.upload.size.limit}

#Company Onboarding
company.onboarding.rollout.date=${company.onboarding.rollout.date}

wm.conf=${wm.conf}
