{
  "swagger" : "2.0",
  "info" : {
    "description" : "Worker and Employer APIs",
    "version" : "v2",
    "title" : "Swagger spec for Work Market API v2",
    "termsOfService" : "https://www.workmarket.com/tos",
    "contact" : {
      "name" : "Work Market API Team",
      "url" : "https://developer.workmarket.com",
      "email" : "api@workmarket.com"
    },
    "license" : {
      "name" : "Company Licence",
      "url" : "https://developer.workmarket.com/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "www.workmarket.com",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Account"
  }, {
    "name" : "Accounts"
  }, {
    "name" : "Assignments"
  }, {
    "name" : "Clients"
  }, {
    "name" : "Company Profile"
  }, {
    "name" : "Custom Fields"
  }, {
    "name" : "Documents"
  }, {
    "name" : "Esignature"
  }, {
    "name" : "Followers"
  }, {
    "name" : "Funds"
  }, {
    "name" : "Labels"
  }, {
    "name" : "OrgStructure"
  }, {
    "name" : "PersonaMode"
  }, {
    "name" : "Profile"
  }, {
    "name" : "Projects"
  }, {
    "name" : "Qualitifications"
  }, {
    "name" : "Requirements"
  }, {
    "name" : "Search"
  }, {
    "name" : "Surveys"
  }, {
    "name" : "Tax"
  }, {
    "name" : "Uploads"
  }, {
    "name" : "User Settings"
  }, {
    "name" : "Worker Search"
  }, {
    "name" : "assignments"
  }, {
    "name" : "constants"
  }, {
    "name" : "groups"
  }, {
    "name" : "profile"
  }, {
    "name" : "services"
  }, {
    "name" : "tax"
  }, {
    "name" : "worker"
  }, {
    "name" : "worker services"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/employer/v2/assignments/templates" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment template for a given list of fields",
        "description" : "",
        "operationId" : "getAssignmentTemplatesByFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create a new assignment template",
        "description" : "",
        "operationId" : "postCreateAssignmentTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Template"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Template"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/v2/assignments/templates/{id}" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment template",
        "description" : "",
        "operationId" : "getAssignmentTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Template"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment template",
        "description" : "",
        "operationId" : "postCreateAssignmentTemplateById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Template"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Template"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment template",
        "description" : "",
        "operationId" : "putUpdateAssignmentTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Template"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Template"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/v2/settings/users" : {
      "get" : {
        "tags" : [ "User Settings" ],
        "summary" : "Get all users",
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User Settings" ],
        "summary" : "Save user",
        "description" : "",
        "operationId" : "postCreateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Create User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/v2/settings/users/{userNumber}" : {
      "get" : {
        "tags" : [ "User Settings" ],
        "summary" : "Get user",
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User Settings" ],
        "summary" : "Update user",
        "description" : "",
        "operationId" : "postUpdateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/v2/settings/users/{userNumber}/deactivation" : {
      "put" : {
        "tags" : [ "User Settings" ],
        "summary" : "Deactivate user",
        "description" : "",
        "operationId" : "putDeactivateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReassignUserForm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employer/v2/settings/users/{userNumber}/verification" : {
      "get" : {
        "tags" : [ "User Settings" ],
        "summary" : "Verify user",
        "description" : "",
        "operationId" : "getVerifyUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/assignments/list" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "List assignments (deprecated, please use /v2/assignments/search)",
        "description" : "",
        "operationId" : "listAssignments",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "deprecated" : true
      }
    },
    "/v2/assignments/search" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Search assignments",
        "description" : "",
        "operationId" : "searchAssignments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentSearchResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/assignments/{workNumber}/custom_fields" : {
      "put" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Update multiple custom fields",
        "description" : "",
        "operationId" : "putUpdateBulkCustomFields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldsUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2xResponse"
            }
          }
        }
      }
    },
    "/v2/assignments/{workNumber}/custom_fields/{position}" : {
      "post" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Create custom fields",
        "description" : "",
        "operationId" : "postCreateCustomFields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "position",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldsUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2xResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Update a custom field group's custom fields by position",
        "description" : "",
        "operationId" : "putUpdateCustomFieldGroupByPosition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "position",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldsUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2xResponse"
            }
          }
        }
      }
    },
    "/v2/confirm_account/{encryptedId}" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "Confirm an email",
        "description" : "",
        "operationId" : "getConfirmAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Your account has been confirmed.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/EmptyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The user you are trying to confirm does not exist."
          },
          "403" : {
            "description" : "The email address you are trying to confirm is no longer available."
          }
        }
      }
    },
    "/v2/constants/country_codes" : {
      "get" : {
        "tags" : [ "constants" ],
        "summary" : "Get the list of Country codes",
        "description" : "",
        "operationId" : "getCountryCodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/decision_flow/activate/{decisionFlowUuid}" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Activate a decision flow.",
        "description" : "",
        "operationId" : "activate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "decisionFlowUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Decision flow activated.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Decision flow not found."
          },
          "500" : {
            "description" : "We encountered an error while activating the decision flow."
          }
        }
      }
    },
    "/v2/decision_flow/create" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Create a decision flow",
        "description" : "",
        "operationId" : "createDecisionFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DecisionFlow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DecisionFlow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/decision_flow/deactivate/{decisionFlowUuid}" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Deactivate a decision flow.",
        "description" : "",
        "operationId" : "deactivate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "decisionFlowUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Decision flow deactivated.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Decision flow not found."
          },
          "500" : {
            "description" : "We encountered an error while deactivating the decision flow."
          }
        }
      }
    },
    "/v2/decision_flow/decide" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Save a decision.",
        "description" : "",
        "operationId" : "decide",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Decision"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Decision saved.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Decision not found."
          },
          "500" : {
            "description" : "We encountered an error while saving the decision."
          }
        }
      }
    },
    "/v2/decision_flow/list/companyNumber/{companyNumber}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get the decision flow template UUIDs for a company.",
        "description" : "",
        "operationId" : "getDecisionFlowUuidsByCompanyNumber",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "companyNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieved decision flow template UUIDs.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Decision flow template UUIDs not found."
          },
          "500" : {
            "description" : "We encountered an error while getting decision flow template UUIDs."
          }
        }
      }
    },
    "/v2/decision_flow/update/{uuid}" : {
      "put" : {
        "tags" : [ "Profile" ],
        "summary" : "Update a decision flow by UUID",
        "description" : "",
        "operationId" : "updateDecisionFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DecisionFlow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DecisionFlow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/decision_flow/{uuid}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get a decision flow by UUID",
        "description" : "",
        "operationId" : "getDecisionFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DecisionFlow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create a new assignment",
        "description" : "",
        "operationId" : "postCreateAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/add_client" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a new Client for any of user's assignments",
        "description" : "",
        "operationId" : "postCreateAssignmentClient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClientCompanyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ClientCompanyDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/assignment_copy_quantities" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's copy quantity",
        "description" : "",
        "operationId" : "getAssignmentCopyQuantity",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "integer",
                      "format" : "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/availableFunds" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get current user's available funds",
        "description" : "",
        "operationId" : "getUserAvailableFunds",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AvailableFunds"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/configuration" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get default assignment settings",
        "description" : "",
        "operationId" : "getAssignmentsConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update default assignment settings",
        "description" : "",
        "operationId" : "postAssignmentSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update default assignment settings",
        "description" : "",
        "operationId" : "putUpdateAssignmentSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create a draft assignment",
        "description" : "",
        "operationId" : "postAssignmentDraft",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/multiple" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create multiple draft assignments (copies)",
        "description" : "",
        "operationId" : "postBulkDraftAssignments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        }, {
          "name" : "numberOfCopies",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/validation_errors" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Validate a draft assignment",
        "description" : "",
        "operationId" : "postValidateAssignmentDraft",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/ApiBaseError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment details",
        "description" : "",
        "operationId" : "getAssignmentDraft",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update a draft assignment",
        "description" : "",
        "operationId" : "postUpdateAssignmentDraft",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update a draft assignment",
        "description" : "",
        "operationId" : "putUpdateAssignmentDraft",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/configuration" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment configuration details",
        "description" : "",
        "operationId" : "getAssignmentDraftConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment configuration details",
        "description" : "",
        "operationId" : "postAssignmentDraftConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment configuration details",
        "description" : "",
        "operationId" : "putAssignmentDraftConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/custom_field_groups" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment custom field groups",
        "description" : "",
        "operationId" : "getAssignmentDraftCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment custom field groups",
        "description" : "",
        "operationId" : "postAssignmentDraftCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CustomFieldGroup"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment custom field groups",
        "description" : "",
        "operationId" : "putAssignmentDraftCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CustomFieldGroup"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/deliverables_group" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get the deliverables associated with this assignment",
        "description" : "",
        "operationId" : "getAssignmentDraftDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update the deliverables associated with this assignment",
        "description" : "",
        "operationId" : "postAssignmentDraftDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeliverablesGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update the deliverables associated with this assignment",
        "description" : "",
        "operationId" : "putAssignmentDraftDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeliverablesGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/documents" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get the documents associated with this assignment ",
        "description" : "",
        "operationId" : "getAssignmentDraftDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update the documents associated with this assignment",
        "description" : "",
        "operationId" : "postAssignmentDraftDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Document"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update the documents associated with this assignment",
        "description" : "",
        "operationId" : "putAssignmentDraftDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Document"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/location" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment location details",
        "description" : "",
        "operationId" : "getAssignmentDraftLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment location details",
        "description" : "",
        "operationId" : "postAssignmentDraftLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment location details",
        "description" : "",
        "operationId" : "putAssignmentDraftLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/pricing" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment pricing details",
        "description" : "",
        "operationId" : "getAssignmentDraftPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment pricing details",
        "description" : "",
        "operationId" : "postAssignmentDraftPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Pricing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment pricing details",
        "description" : "",
        "operationId" : "putAssignmentDraftPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Pricing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/routing" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment routing details",
        "description" : "",
        "operationId" : "getAssignmentDraftRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment routing details",
        "description" : "",
        "operationId" : "postAssignmentDraftRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Routing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update assignment routing details",
        "description" : "",
        "operationId" : "putAssignmentDraftRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Routing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/schedule" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment schedule",
        "description" : "",
        "operationId" : "getAssignmentDraftSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment schedule",
        "description" : "",
        "operationId" : "postAssignmentDraftSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Schedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment schedule",
        "description" : "",
        "operationId" : "putAssignmentDraftSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Schedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/shipments" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment shipments",
        "description" : "",
        "operationId" : "getAssignmentDraftShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment shipments",
        "description" : "",
        "operationId" : "postAssignmentDraftShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShipmentGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment shipments",
        "description" : "",
        "operationId" : "putAssignmentDraftShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShipmentGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/drafts/{id}/surveys" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment surveys",
        "description" : "",
        "operationId" : "getAssignmentDraftSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment surveys",
        "description" : "",
        "operationId" : "postAssignmentDraftSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Survey"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create/update assignment surveys",
        "description" : "",
        "operationId" : "putAssignmentDraftSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Survey"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/multiple" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create multiple new assignments (copies)",
        "description" : "",
        "operationId" : "postCreateBulkAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        }, {
          "name" : "numberOfCopies",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/validation_errors" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Validate an assignment",
        "description" : "",
        "operationId" : "postValidateAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/ApiBaseError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get assignment by id",
        "description" : "",
        "operationId" : "getAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment",
        "description" : "All objects in the assignment graph will be affected",
        "operationId" : "postCreateAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment",
        "description" : "All objects in the assignment graph will be affected",
        "operationId" : "putUpdateAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/configuration" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's configuration details",
        "description" : "",
        "operationId" : "getAssignmentConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's configuration details",
        "description" : "",
        "operationId" : "postCreateAssignmentConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's configuration details",
        "description" : "",
        "operationId" : "putUpdateAssignmentConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AssignmentConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/custom_field_groups" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's custom field groups",
        "description" : "",
        "operationId" : "getAssignmentCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's custom field groups",
        "description" : "",
        "operationId" : "postCreateAssignmentCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CustomFieldGroup"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's custom field groups",
        "description" : "",
        "operationId" : "putUpdateAssignmentCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CustomFieldGroup"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CustomFieldGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/deliverables_group" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's deliverables",
        "description" : "",
        "operationId" : "getAssignmentDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's deliverables",
        "description" : "",
        "operationId" : "postCreateAssignmentDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeliverablesGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's deliverables",
        "description" : "",
        "operationId" : "putUpdateAssignmentDeliverablesGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeliverablesGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeliverablesGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/documents" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's documents",
        "description" : "",
        "operationId" : "getAssignmentDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's documents",
        "description" : "",
        "operationId" : "postCreateAssignmentDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Document"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's documents",
        "description" : "",
        "operationId" : "putUpdateAssignmentDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Document"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/location" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's location details",
        "description" : "",
        "operationId" : "getAssignmentLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's location details",
        "description" : "",
        "operationId" : "postAssignmentLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's location details",
        "description" : "",
        "operationId" : "putUpdateAssignmentLocation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Location"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/pricing" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's pricing details",
        "description" : "",
        "operationId" : "getAssignmentPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's pricing details",
        "description" : "",
        "operationId" : "postCreateAssignmentPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Pricing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's pricing details",
        "description" : "",
        "operationId" : "putUpdateAssignmentPricing",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Pricing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Pricing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/routing" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's routing details",
        "description" : "",
        "operationId" : "getAssignmentRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's routing details",
        "description" : "",
        "operationId" : "postCreateAssignmentRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Routing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's routing details",
        "description" : "",
        "operationId" : "putUpdateAssignmentRouting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Routing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Routing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/schedule" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's schedule",
        "description" : "",
        "operationId" : "getAssignmentSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's schedule",
        "description" : "",
        "operationId" : "postCreateAssignmentSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Schedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's schedule",
        "description" : "",
        "operationId" : "putUpdateAssignmentSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Schedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Schedule"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/shipments" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's shipments",
        "description" : "",
        "operationId" : "getAssignmentShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's shipments",
        "description" : "",
        "operationId" : "postCreateAssignmentShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShipmentGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's shipments",
        "description" : "",
        "operationId" : "putUpdateAssignmentShipments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShipmentGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ShipmentGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{id}/surveys" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an assignment's surveys",
        "description" : "",
        "operationId" : "getAssignmentSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Create an assignment's surveys",
        "description" : "",
        "operationId" : "postCreateAssignmentSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Survey"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an assignment's surveys",
        "description" : "",
        "operationId" : "putUpdateAssignmentSurveys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Survey"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/assignments/{workNumber}/accept_work_on_behalf_of" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Accept work on behalf of the given worker",
        "description" : "",
        "operationId" : "postAcceptWorkOnBehalfOfWorker",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AcceptOnBehalf"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/client_companies" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get client companies with the given fields",
        "description" : "",
        "operationId" : "getClientCompanies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/client_companies/{id}/projects" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get projects for the given client company",
        "description" : "",
        "operationId" : "getProjectsByClient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/client_locations" : {
      "get" : {
        "tags" : [ "Clients" ],
        "summary" : "Get a list of client locations",
        "description" : "",
        "operationId" : "getClientLocations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/create-account" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Signup a new Employer without a campaign id",
        "description" : "",
        "operationId" : "postSignUpEmployerWithoutCampaignId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCompanyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CreateCompanyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "We were unable to register your account"
          }
        }
      }
    },
    "/v2/employer/create-account/{encryptedId}" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Signup a new Employer with a campaign id",
        "description" : "",
        "operationId" : "postSignUpEmployer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCompanyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CreateCompanyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "We were unable to register your account"
          }
        }
      }
    },
    "/v2/employer/custom_field_groups" : {
      "get" : {
        "tags" : [ "Custom Fields" ],
        "summary" : "Get a list of custom field groups and suppress all but the given fields",
        "description" : "",
        "operationId" : "getCustomFieldGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/documents" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Get documents",
        "description" : "",
        "operationId" : "getDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/followers" : {
      "get" : {
        "tags" : [ "Followers" ],
        "summary" : "Get followers of your company",
        "description" : "",
        "operationId" : "getFollowers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/labels" : {
      "get" : {
        "tags" : [ "Labels" ],
        "summary" : "Get labels",
        "description" : "",
        "operationId" : "getLabels",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/mappings" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get Upload Mappings",
        "description" : "",
        "operationId" : "getUploadMappings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create mappings",
        "description" : "",
        "operationId" : "postCreateUploadMappings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MappingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MappingsDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/mappings/{id}" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get mapping",
        "description" : "",
        "operationId" : "getUploadMapping",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MappingsDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create mappings",
        "description" : "",
        "operationId" : "postCreateUploadMappings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MappingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MappingsDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Uploads" ],
        "summary" : "Update mappings",
        "description" : "",
        "operationId" : "putUpdateUploadMappings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MappingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MappingsDTO"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Uploads" ],
        "summary" : "Delete mapping",
        "description" : "",
        "operationId" : "deleteUploadMapping",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/payment_configuration" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get payment configuration",
        "description" : "",
        "operationId" : "getPaymentConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PaymentConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/payment_terms" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "List payment terms options",
        "description" : "",
        "operationId" : "getPaymentTerms",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "List projects",
        "description" : "",
        "operationId" : "getProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Create a new Project",
        "description" : "",
        "operationId" : "createProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProjectApiDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ProjectApiDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/projects/users" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "List users that can be project owners",
        "description" : "",
        "operationId" : "getProjectOwners",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/requirement_sets" : {
      "get" : {
        "tags" : [ "Requirements" ],
        "summary" : "List requirement sets",
        "description" : "",
        "operationId" : "getRequirementSets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/search/workers/filters" : {
      "post" : {
        "tags" : [ "Worker Search" ],
        "summary" : "List filters",
        "description" : "",
        "operationId" : "postListWorkerSearchFilters",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkerSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/search/workers/query" : {
      "post" : {
        "tags" : [ "Worker Search" ],
        "summary" : "Search workers",
        "description" : "",
        "operationId" : "postSearchWorkers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkerSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/WorkerSearchRecord"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/search/workers/view" : {
      "post" : {
        "tags" : [ "Worker Search" ],
        "summary" : "Fetch Worker Profiles",
        "description" : "",
        "operationId" : "postListWorkerProfiles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkDetailsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/settings/completeness_percentage" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get profile completeness",
        "description" : "",
        "operationId" : "getProfileCompleteness",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/SettingsCompleteness"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/funds/accounts" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Save bank account information",
        "description" : "",
        "operationId" : "postBankAccountInformation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ACHBankAccont"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ACHBankAccont"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/funds/accounts/admins" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get list of admins",
        "description" : "",
        "operationId" : "getAdmins",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/funds/credit_card" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Add funds via credit card (employer)",
        "description" : "",
        "operationId" : "postAddFundsCreditCard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreditCardPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CreditCardPaymentResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/profile" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get company profile for logged in user",
        "description" : "",
        "operationId" : "getUserCompanyProfile",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyProfile"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Create company profile",
        "description" : "",
        "operationId" : "postCreateCompanyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompanyProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyProfile"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profile" ],
        "summary" : "Update company profile",
        "description" : "",
        "operationId" : "putUpdateCompanyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompanyProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/profile/public/{id}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get public company profile",
        "description" : "",
        "operationId" : "getPublicCompanyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/profile/{id}" : {
      "get" : {
        "tags" : [ "Profile" ],
        "summary" : "Get company profile",
        "description" : "",
        "operationId" : "getCompanyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/profile/{id}/follower" : {
      "post" : {
        "tags" : [ "Profile" ],
        "summary" : "Follow company profile",
        "description" : "",
        "operationId" : "postFollowCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profile" ],
        "summary" : "Unfollow company profile",
        "description" : "",
        "operationId" : "deleteFollowCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/v2/employer/settings/profile/{id}/workers" : {
      "get" : {
        "tags" : [ "Company Profile" ],
        "summary" : "List company workers",
        "description" : "",
        "operationId" : "getCompanyWorkers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CompanyWorkers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/settings/tax" : {
      "post" : {
        "tags" : [ "Tax" ],
        "summary" : "Save tax info",
        "description" : "",
        "operationId" : "postSaveTaxInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaxInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/TaxInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/surveys" : {
      "get" : {
        "tags" : [ "Surveys" ],
        "summary" : "List surveys",
        "description" : "",
        "operationId" : "getSurveys",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Survey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/uploads/" : {
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Save new CSV",
        "description" : "",
        "operationId" : "postNewCSV",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CsvDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get CSV info",
        "description" : "",
        "operationId" : "getCSV",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CsvDTO"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Uploads" ],
        "summary" : "Delete CSV info",
        "description" : "",
        "operationId" : "deleteCSV",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/assignments" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get assignments from CSV",
        "description" : "",
        "operationId" : "getAssignmentsFromCSV",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Assignments"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create assignments from CSV",
        "description" : "",
        "operationId" : "postAssignmentsFromCSV",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/data" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get data",
        "description" : "",
        "operationId" : "getCSVData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DataDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create data",
        "description" : "",
        "operationId" : "postCreateCSVData",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MappingDTO"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/error_file" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get error file",
        "description" : "",
        "operationId" : "getCSVErrorFile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiRedirectResponse"
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/file" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Download CSV",
        "description" : "",
        "operationId" : "getCSVFile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiRedirectResponse"
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/headers" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get CSV headers",
        "description" : "",
        "operationId" : "getCSVHeaders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/MappingDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/labels" : {
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Set label",
        "description" : "",
        "operationId" : "postCSVLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/parsing_errors" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get parsing errors",
        "description" : "",
        "operationId" : "getCSVParsingErrors",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/ErrorsDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/previews" : {
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create previews",
        "description" : "",
        "operationId" : "postCreatePreviews",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/rows" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get CSV rows",
        "description" : "",
        "operationId" : "getCSVRows",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/RowsDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create CSV rows",
        "description" : "",
        "operationId" : "postCreateCSVRows",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/settings" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get upload settings",
        "description" : "",
        "operationId" : "getSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/SettingsDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Uploads" ],
        "summary" : "Create upload settings",
        "description" : "",
        "operationId" : "postCreateSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SettingsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/SettingsDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/employer/uploads/{uuid}/status" : {
      "get" : {
        "tags" : [ "Uploads" ],
        "summary" : "Get status",
        "description" : "",
        "operationId" : "getCSVStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/StatusDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/esignature/get_signable" : {
      "get" : {
        "tags" : [ "Esignature" ],
        "summary" : "Get signable.",
        "description" : "",
        "operationId" : "getSignable",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/SignableEsignatureResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/esignature/get_signed" : {
      "get" : {
        "tags" : [ "Esignature" ],
        "summary" : "Get signed.",
        "description" : "",
        "operationId" : "getSigned",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/SignedEsignatureResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/esignature/template/list" : {
      "get" : {
        "tags" : [ "Esignature" ],
        "summary" : "List esignature templates.",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Template"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgStructure/orgMode" : {
      "get" : {
        "tags" : [ "OrgStructure" ],
        "summary" : "Get org mode for current user.",
        "description" : "",
        "operationId" : "getOrgMode",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "OrgStructure" ],
        "summary" : "Set org mode for current user.",
        "description" : "",
        "operationId" : "setOrgMode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgModeUuid",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgStructure/orgModeOptions" : {
      "get" : {
        "tags" : [ "OrgStructure" ],
        "summary" : "Get org mode for current user.",
        "description" : "",
        "operationId" : "getOrgModeOptions",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/OrgUnitPath"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgStructure/orgUnitMembers" : {
      "post" : {
        "tags" : [ "OrgStructure" ],
        "summary" : "Get all members of the org units specified",
        "description" : "",
        "operationId" : "getOrgUnitMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orgStructure/{orgUnitUuid}/subTreePaths" : {
      "get" : {
        "tags" : [ "OrgStructure" ],
        "summary" : "Get all org units under the sub tree rooted at the given org unit",
        "description" : "",
        "operationId" : "getSubtreePaths",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/OrgUnitDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/recommend/skill" : {
      "post" : {
        "tags" : [ "Qualitifications" ],
        "summary" : "Recommend a list of skills given some contextual information, industry ID, job titles, etc.",
        "description" : "Returns an empty array if query param is empty",
        "operationId" : "postRecommendSkills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SkillRecommenderDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Qualification"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/v2/resend_confirmation_email/{userNumber}" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "Resend a confirm email",
        "description" : "",
        "operationId" : "getResendConfirmationEmail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resetPassword",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Your confirmation email has been sent.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/EmptyResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User not found"
          },
          "500" : {
            "description" : "We encountered an error while sending you a confirmation email. Please try again."
          }
        }
      }
    },
    "/v2/suggest/jobTitle" : {
      "get" : {
        "tags" : [ "Qualitifications" ],
        "summary" : "Get a list of predefined job titles prefixed by q query param",
        "description" : "Returns an empty array if query param is empty",
        "operationId" : "getJobTitlesWithPrefix",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobTitle"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/v2/suggest/skill" : {
      "get" : {
        "tags" : [ "Qualitifications" ],
        "summary" : "Get a list of predefined skills prefixed by q query param. Used for type-ahead purposes. This is more fuzzy name resolver and is not a recommender. For that see /v2/recommend/skill.",
        "description" : "Returns an empty array if query param is empty",
        "operationId" : "getSkillsWithPrefix",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SkillApiDTO"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/v2/tax/info" : {
      "get" : {
        "tags" : [ "tax" ],
        "summary" : "Get the current user's latest tax info.",
        "description" : "",
        "operationId" : "getLatestTaxInfo",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/TaxInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/tax/national_ids" : {
      "get" : {
        "tags" : [ "tax" ],
        "summary" : "Get the list of National IDs.",
        "description" : "",
        "operationId" : "getNationalIdList",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/NationalId"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/tax/save" : {
      "post" : {
        "tags" : [ "tax" ],
        "summary" : "Create a new entity for the current user.",
        "description" : "",
        "operationId" : "save",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaxInfoSave"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/TaxInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/tax/w9_preview" : {
      "post" : {
        "tags" : [ "tax" ],
        "summary" : "Return PDF W9 preview.",
        "description" : "",
        "operationId" : "previewW9",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/W9PdfPreview"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/v2/worker/create-account" : {
      "post" : {
        "tags" : [ "worker", "profile" ],
        "summary" : "Signup a new Worker",
        "description" : "",
        "operationId" : "signup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateWorkerRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/CreateNewWorkerResponse"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Could not create user."
          }
        }
      }
    },
    "/v2/worker/groups/{groupId}" : {
      "get" : {
        "tags" : [ "worker", "groups" ],
        "summary" : "Get group details",
        "description" : "",
        "operationId" : "details",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Group"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "groups.view.unauthorized"
          }
        }
      }
    },
    "/v2/worker/groups/{groupId}/apply" : {
      "post" : {
        "tags" : [ "worker", "groups" ],
        "summary" : "Apply to join a group",
        "description" : "",
        "operationId" : "apply",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "groups.apply.approved",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          },
          "400" : {
            "description" : "groups.apply.error"
          },
          "403" : {
            "description" : "groups.view.unauthorized"
          }
        }
      }
    },
    "/v2/worker/groups/{groupId}/decline" : {
      "post" : {
        "tags" : [ "worker", "groups" ],
        "summary" : "Decline to join a group",
        "description" : "",
        "operationId" : "decline",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "description" : "Group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "groups.decline.notice",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          },
          "400" : {
            "description" : "groups.decline.error"
          }
        }
      }
    },
    "/v2/worker/profile/{userNumber}" : {
      "get" : {
        "tags" : [ "worker", "profile" ],
        "summary" : "Get a profile by userNumber",
        "description" : "",
        "operationId" : "getUserProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "description" : "User Number of the user in question",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Profile"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "api.exceptions.forbidden"
          }
        }
      },
      "post" : {
        "tags" : [ "worker", "profile" ],
        "summary" : "Update a user's profile by user number",
        "description" : "",
        "operationId" : "updateProfileFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Profile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Profile"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "api.exceptions.forbidden"
          }
        }
      }
    },
    "/v2/worker/profile/{userNumber}/avatar" : {
      "post" : {
        "tags" : [ "worker", "profile" ],
        "summary" : "Update a user's profile avatar by user number",
        "description" : "",
        "operationId" : "updateProfileAvatar",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Image"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Profile"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "api.exceptions.forbidden"
          }
        }
      }
    },
    "/v2/workers/search" : {
      "get" : {
        "tags" : [ "Search" ],
        "summary" : "Search for workers",
        "description" : "",
        "operationId" : "getSearchWorkers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkersSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/WorkersSearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/accounts" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "List all payment account for the logged in user.",
        "description" : "",
        "operationId" : "getAccounts",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/FulfillmentPayloadDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Create a payment account for the logged in user.",
        "description" : "",
        "operationId" : "createBankAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BankAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/BankAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/accounts/routing-numbers/{country}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Search ACH routing numbers.",
        "description" : "",
        "operationId" : "searchRoutingNumbers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "country",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/BankRouting"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/accounts/{accountId}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get a payment account for the logged in user.",
        "description" : "",
        "operationId" : "getAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/FulfillmentPayloadDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/accounts/{accountId}/deactivate" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Deactivate a payment account for the logged in user.",
        "description" : "",
        "operationId" : "deactivateAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/BankAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/accounts/{accountId}/verify" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Verify a payment account for the logged in user.",
        "description" : "",
        "operationId" : "verifyAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VerifyPaymentAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments" : {
      "get" : {
        "tags" : [ "worker", "assignments" ],
        "summary" : "Get a list of assignments",
        "description" : "",
        "operationId" : "getWorkerAssignments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/accept/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Accept an assignment",
        "description" : "",
        "operationId" : "postAcceptAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AcceptWork"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/checkin/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Check-in to an assignment",
        "description" : "",
        "operationId" : "postCheckInAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckIn"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/checkin/{workNumber}/{checkInOutPairId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Update a Check-in",
        "description" : "",
        "operationId" : "postUpdateCheckInAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "checkInOutPairId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckIn"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/checkout/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Check-out of an assignment",
        "description" : "",
        "operationId" : "postCheckOutAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckOut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/checkout/{workNumber}/{checkInOutPairId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Update a Check-out",
        "description" : "",
        "operationId" : "postUpdateCheckOutAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "checkInOutPairId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckOut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/complete/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Complete an assignment",
        "description" : "",
        "operationId" : "postCompleteAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Complete"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/confirm/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Confirm an assignment",
        "description" : "",
        "operationId" : "postConfirmAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/reject/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Decline an assignment",
        "description" : "",
        "operationId" : "postRejectAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeclineWork"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/worker/v2/assignments/reschedule/{workNumber}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "[DEPRECATED] Reschedule an assignment",
        "description" : "",
        "operationId" : "postRescheduleAssignmentDeprecated",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Reschedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}" : {
      "get" : {
        "tags" : [ "worker", "assignments" ],
        "summary" : "Get the details of the given assignment",
        "description" : "",
        "operationId" : "getWorkerAssignmentDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/abandon" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Abandon an assignment",
        "description" : "",
        "operationId" : "postAbandonAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AbandonAssignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/accept" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Accept an assignment",
        "description" : "",
        "operationId" : "postAcceptAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/AcceptWork"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/application" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Apply for an assignment",
        "description" : "",
        "operationId" : "postApplyAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignmentApplication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/application/cancel" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Cancel an assignment application",
        "description" : "",
        "operationId" : "postCancelApplyAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/assets/{assetUUID}" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get an asset for an assignment",
        "description" : "",
        "operationId" : "getAssignmentAsset",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assetUUID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update an asset of an assignment",
        "description" : "",
        "operationId" : "postUpdateAssignmentAsset",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assetUUID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAsset"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/checkin" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Check-in to an assignment",
        "description" : "",
        "operationId" : "postCheckInAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckIn"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/checkin/{checkInOutPairId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update a Check-in",
        "description" : "",
        "operationId" : "postUpdateCheckInAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "checkInOutPairId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckIn"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/checkout" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Check-out of an assignment",
        "description" : "",
        "operationId" : "postCheckOutAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckOut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/checkout/{checkInOutPairId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update a Check-out",
        "description" : "",
        "operationId" : "postUpdateCheckOutAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "checkInOutPairId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckOut"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/complete" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Complete an assignment",
        "description" : "",
        "operationId" : "postCompleteAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Complete"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/confirm" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Confirm an assignment",
        "description" : "",
        "operationId" : "postConfirmAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/customfields" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get custom fields for an assignment",
        "description" : "",
        "operationId" : "getCustomFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Save custom fields",
        "description" : "",
        "operationId" : "postSaveCustomFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SaveCustomFields"
          }
        }, {
          "name" : "onComplete",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/decline" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Decline an assignment",
        "description" : "",
        "operationId" : "postDeclineAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/DeclineWork"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/deliverables" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a deliverable to an assignment",
        "description" : "",
        "operationId" : "postAddDeliverable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddDeliverable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/deliverables/{assetUuid}/removeUuid" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Delete a deliverable by UUID",
        "description" : "",
        "operationId" : "postDeleteDeliverableByUUID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "assetUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/deliverables/{deliverableId}/remove" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Delete a deliverable by Id",
        "description" : "",
        "operationId" : "postDeleteDeliverableById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deliverableId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/deliverables/{deliverableRequirementId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a deliverable to a requirement set",
        "description" : "",
        "operationId" : "postAddDeliverableToRequirementSet",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deliverableRequirementId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddDeliverable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/deliverables/{deliverableRequirementId}/{deliverableId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Update a deliverable for a requirement set",
        "description" : "",
        "operationId" : "postUpdateDeliverable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deliverableRequirementId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "deliverableId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddDeliverable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/labels" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get all labels for an assignment",
        "description" : "",
        "operationId" : "getLabels",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/labels/{labelId}" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a label to an assignment",
        "description" : "",
        "operationId" : "postAddLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "labelId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddLabel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/messages" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get all messages for an assignment",
        "description" : "",
        "operationId" : "getAssignmentMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a message to an assignment",
        "description" : "",
        "operationId" : "postAddAssignmentMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddMessage"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/pricing/bonus" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Request a bonus",
        "description" : "",
        "operationId" : "postBonusRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Negotiation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/pricing/budgetIncrease" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Request a budget increase",
        "description" : "",
        "operationId" : "postBudgetIncreaseRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Negotiation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/pricing/expenseReimbursement" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Request an expense reimbursement",
        "description" : "",
        "operationId" : "postExpenseReimbursementRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Negotiation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/questions" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get all questions for an assignment",
        "description" : "",
        "operationId" : "getQuestions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Add a question to an assignment",
        "description" : "",
        "operationId" : "postAddQuestion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Question"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/assignments/{workNumber}/reschedule" : {
      "post" : {
        "tags" : [ "Assignments" ],
        "summary" : "Reschedule an assignment",
        "description" : "",
        "operationId" : "postRescheduleAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Reschedule"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/feed" : {
      "get" : {
        "tags" : [ "Assignments" ],
        "summary" : "Get the assignment feed for the currently logged in user",
        "description" : "",
        "operationId" : "getFeed",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/funds" : {
      "get" : {
        "tags" : [ "Funds" ],
        "summary" : "Get all funds for the logged in user",
        "description" : "",
        "operationId" : "getFunds",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/funds/fastFund/{workNumber}" : {
      "post" : {
        "tags" : [ "Funds" ],
        "summary" : "Fast Fund an assignment",
        "description" : "",
        "operationId" : "postFastFundsAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/funds/withdraw" : {
      "post" : {
        "tags" : [ "Funds" ],
        "summary" : "Withdraw funds",
        "description" : "",
        "operationId" : "postWithdrawFunds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WithdrawalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/persona/get" : {
      "get" : {
        "tags" : [ "PersonaMode" ],
        "summary" : "Get the current persona mode",
        "description" : "",
        "operationId" : "getPersonaMode",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PersonaMode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/persona/modes" : {
      "get" : {
        "tags" : [ "PersonaMode" ],
        "summary" : "Retrieve all possible persona modes",
        "description" : "",
        "operationId" : "listAllowedPersonaModes",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "BUYER", "SELLER", "DISPATCHER" ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/persona/set" : {
      "post" : {
        "tags" : [ "PersonaMode" ],
        "summary" : "Set persona mode",
        "description" : "",
        "operationId" : "setPersonaMode",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PersonaMode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "meta" : {
                  "$ref" : "#/definitions/meta"
                },
                "pagination" : {
                  "type" : "object"
                },
                "results" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/PersonaMode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/worker/v2/services" : {
      "get" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "[NOOP]",
        "description" : "",
        "operationId" : "getWorkerServices",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/services/background-check" : {
      "get" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "Request status of a background check",
        "description" : "",
        "operationId" : "getBackgroundCheckStatus",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "Request a background check",
        "description" : "",
        "operationId" : "postBackgroundCheckRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScreeningWithPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/services/drug-test" : {
      "get" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "Request the status of a drug test",
        "description" : "",
        "operationId" : "getDrugTestStatus",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "Request a drug test",
        "description" : "",
        "operationId" : "postRequestDrugTest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScreeningWithPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    },
    "/worker/v2/services/drug-test-ok" : {
      "post" : {
        "tags" : [ "services", "worker", "worker services" ],
        "summary" : "[NOOP]",
        "description" : "",
        "operationId" : "postDrugTestOk",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScreeningWithPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiV2Response"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ACHBankAccont" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "readOnly" : true
        },
        "bankName" : {
          "type" : "string",
          "readOnly" : true
        },
        "nameOnAccount" : {
          "type" : "string",
          "readOnly" : true
        },
        "routingNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountNumberConfirm" : {
          "type" : "string",
          "readOnly" : true
        },
        "bankAccountTypeCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AbandonAssignment" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AcceptOnBehalf" : {
      "type" : "object",
      "properties" : {
        "note" : {
          "type" : "string"
        },
        "userNumber" : {
          "type" : "string"
        }
      }
    },
    "AcceptWork" : {
      "type" : "object",
      "properties" : {
        "successful" : {
          "type" : "boolean",
          "description" : "successful",
          "readOnly" : true
        }
      }
    },
    "AddDeliverable" : {
      "type" : "object",
      "required" : [ "data", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "position" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true,
          "minimum" : 0
        },
        "data" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AddLabel" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "schedule" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Reschedule"
        }
      }
    },
    "AddMessage" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string"
        },
        "addressLine2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "number"
        },
        "latitude" : {
          "type" : "number"
        },
        "addressTypeCode" : {
          "type" : "string"
        }
      }
    },
    "ApiBaseError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "resource" : {
          "type" : "string",
          "readOnly" : true
        },
        "field" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ApiRedirectResponse" : {
      "type" : "object",
      "properties" : {
        "applicationContext" : {
          "$ref" : "#/definitions/ApplicationContext"
        },
        "beanName" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "requestContextAttribute" : {
          "type" : "string"
        },
        "staticAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "exposePathVariables" : {
          "type" : "boolean"
        },
        "url" : {
          "type" : "string"
        },
        "propagateQueryProperties" : {
          "type" : "boolean"
        },
        "redirectView" : {
          "type" : "boolean"
        },
        "attributesMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ApiV2Pagination" : {
      "type" : "object",
      "properties" : {
        "page" : {
          "type" : "integer",
          "format" : "int64"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPageCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalRecordCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "links" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ApiV2Response" : {
      "type" : "object",
      "properties" : {
        "meta" : {
          "description" : "Details about this response",
          "readOnly" : true,
          "$ref" : "#/definitions/meta"
        },
        "results" : {
          "description" : "List of results",
          "readOnly" : true,
          "$ref" : "#/definitions/__GenericList__"
        },
        "pagination" : {
          "type" : "object",
          "description" : "Pagination details (optional)",
          "readOnly" : true
        }
      }
    },
    "ApiV2xResponse" : {
      "type" : "object",
      "properties" : {
        "meta" : {
          "description" : "Details about this response",
          "$ref" : "#/definitions/meta"
        },
        "response" : {
          "type" : "object",
          "description" : "Result object, or list of objects"
        },
        "errors" : {
          "type" : "array",
          "description" : "List of errors",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "ApplicationContext" : {
      "type" : "object",
      "properties" : {
        "applicationName" : {
          "type" : "string"
        },
        "startupDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "autowireCapableBeanFactory" : {
          "$ref" : "#/definitions/AutowireCapableBeanFactory"
        },
        "parent" : {
          "$ref" : "#/definitions/ApplicationContext"
        },
        "id" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "environment" : {
          "$ref" : "#/definitions/Environment"
        },
        "beanDefinitionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "beanDefinitionNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parentBeanFactory" : {
          "$ref" : "#/definitions/BeanFactory"
        },
        "classLoader" : {
          "$ref" : "#/definitions/ClassLoader"
        }
      }
    },
    "Assignment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "instructions" : {
          "type" : "string",
          "readOnly" : true
        },
        "instructionsPrivate" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "skills" : {
          "type" : "string",
          "readOnly" : true
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "ownerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "supportContactId" : {
          "type" : "string",
          "readOnly" : true
        },
        "uniqueExternalId" : {
          "type" : "string",
          "readOnly" : true
        },
        "requirementSetIds" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "followerIds" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "location" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Location"
        },
        "schedule" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Schedule"
        },
        "pricing" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Pricing"
        },
        "routing" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Routing"
        },
        "customFieldGroups" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/CustomFieldGroup"
          }
        },
        "shipmentGroup" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ShipmentGroup"
        },
        "surveys" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Survey"
          }
        },
        "documents" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Document"
          }
        },
        "deliverablesGroup" : {
          "readOnly" : true,
          "$ref" : "#/definitions/DeliverablesGroup"
        },
        "configuration" : {
          "readOnly" : true,
          "$ref" : "#/definitions/AssignmentConfiguration"
        },
        "recurrence" : {
          "readOnly" : true,
          "$ref" : "#/definitions/RecurrenceDTO"
        }
      }
    },
    "AssignmentApplication" : {
      "type" : "object",
      "properties" : {
        "pricing" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Negotiation"
        },
        "schedule" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Reschedule"
        },
        "expirationDate" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AssignmentConfiguration" : {
      "type" : "object",
      "properties" : {
        "paymentTermsDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customFieldsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "shipmentsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "requirementSetsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "deliverablesEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "surveysEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "uniqueExternalIdEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "uniqueExternalIdDisplayName" : {
          "type" : "string",
          "readOnly" : true
        },
        "documentsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "followersEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "instantNetworkEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "termsOfAgreementEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "termsOfAgreement" : {
          "type" : "string",
          "readOnly" : true
        },
        "codeOfConductEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "codeOfConduct" : {
          "type" : "string",
          "readOnly" : true
        },
        "useWorkMarketPrintout" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "printSettingsLogoOption" : {
          "type" : "string",
          "readOnly" : true
        },
        "printSettingsEndUserTermsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "printSettingsEndUserTerms" : {
          "type" : "string",
          "readOnly" : true
        },
        "printSettingsSignatureEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "printSettingsSignature" : {
          "type" : "string",
          "readOnly" : true
        },
        "printSettingsBadgeEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "projectBudgetManagementEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "requireClientProjectEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "workerRequirementsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "autoRateEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "autoCloseEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "autoCloseHours" : {
          "type" : "string",
          "readOnly" : true
        },
        "ivrEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "agingAssignmentsEnabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "agingAssignmentsEmailAddress" : {
          "type" : "string",
          "readOnly" : true
        },
        "disablePriceNegotiation" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "AssignmentRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "readOnly" : true,
          "$ref" : "#/definitions/WorkStatusType"
        },
        "fields" : {
          "type" : "string",
          "readOnly" : true
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true,
          "maximum" : 30
        },
        "sort" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AssignmentSearchResponse" : {
      "type" : "object",
      "properties" : {
        "resultsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalResultsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "showBulkOps" : {
          "type" : "boolean"
        },
        "resultIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "statusCounts" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "subStatusCounts" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "assignedResources" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/DashboardResource"
          }
        }
      }
    },
    "Assignments" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "count" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "assignments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Assignment"
          }
        }
      }
    },
    "AutowireCapableBeanFactory" : {
      "type" : "object"
    },
    "AvailableFunds" : {
      "type" : "object",
      "properties" : {
        "spendingLimit" : {
          "type" : "number",
          "readOnly" : true
        },
        "aplLimit" : {
          "type" : "number",
          "readOnly" : true
        }
      }
    },
    "BankAccount" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "ACH", "GCC", "PPA" ]
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "bankName" : {
          "type" : "string",
          "readOnly" : true
        },
        "verified" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "accountHolder" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "routingNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CHECKING", "SAVINGS" ]
        },
        "transitBranchNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "financialInstNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "confirmedOn" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "BankRouting" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "bankName" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "routingNumber" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "BeanFactory" : {
      "type" : "object"
    },
    "Builder" : {
      "type" : "object"
    },
    "BuyerScorecard" : {
      "type" : "object",
      "properties" : {
        "paidWorkCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "avgTimeToApproveWorkInDays" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "avgTimeToPayWorkInDays" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "satisfactionRate" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        }
      }
    },
    "ByteString" : {
      "type" : "object",
      "properties" : {
        "validUtf8" : {
          "type" : "boolean"
        },
        "empty" : {
          "type" : "boolean"
        }
      }
    },
    "Cell" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "type" : "string",
          "readOnly" : true
        },
        "value" : {
          "type" : "string",
          "readOnly" : true
        },
        "index" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "CheckIn" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true,
          "minimum" : -90,
          "maximum" : 90
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true,
          "minimum" : -180,
          "maximum" : 180
        }
      }
    },
    "CheckOut" : {
      "type" : "object",
      "properties" : {
        "noteText" : {
          "type" : "string",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true,
          "minimum" : -90,
          "maximum" : 90
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true,
          "minimum" : -180,
          "maximum" : 180
        }
      }
    },
    "ClassLoader" : {
      "type" : "object",
      "properties" : {
        "parent" : {
          "$ref" : "#/definitions/ClassLoader"
        }
      }
    },
    "ClientCompanyDTO" : {
      "type" : "object",
      "required" : [ "addressTypeCode", "city", "country", "name" ],
      "properties" : {
        "addressId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "city" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "state" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 9
        },
        "country" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 45
        },
        "addressTypeCode" : {
          "type" : "string"
        },
        "locationTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dressCodeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latitude" : {
          "type" : "number"
        },
        "longitude" : {
          "type" : "number"
        },
        "clientCompanyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "minLength" : 3,
          "maxLength" : 255
        },
        "primaryLocationName" : {
          "type" : "string"
        },
        "customerId" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "division" : {
          "type" : "string"
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "industryName" : {
          "type" : "string"
        },
        "website" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "phoneExtension" : {
          "type" : "string"
        },
        "latLongSet" : {
          "type" : "boolean"
        },
        "setAddress1" : {
          "type" : "boolean"
        },
        "setAddress2" : {
          "type" : "boolean"
        },
        "setCity" : {
          "type" : "boolean"
        },
        "setState" : {
          "type" : "boolean"
        },
        "setPostalCode" : {
          "type" : "boolean"
        },
        "setCountry" : {
          "type" : "boolean"
        },
        "setAddressTypeCode" : {
          "type" : "boolean"
        },
        "setLocationTypeId" : {
          "type" : "boolean"
        },
        "fullAddress" : {
          "type" : "string"
        },
        "shortAddress" : {
          "type" : "string"
        },
        "addressForGeocoder" : {
          "type" : "string"
        },
        "coordinate" : {
          "$ref" : "#/definitions/Coordinate"
        }
      }
    },
    "Company" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "CompanyProfile" : {
      "type" : "object",
      "properties" : {
        "backgroundCheck" : {
          "type" : "boolean"
        },
        "drugTest" : {
          "type" : "boolean"
        },
        "locationsServiced" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location"
          }
        },
        "skills" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SkillDTO"
          }
        },
        "followedByUser" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "overview" : {
          "type" : "string",
          "readOnly" : true
        },
        "website" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatarSmall" : {
          "type" : "string",
          "readOnly" : true
        },
        "location" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Location"
        },
        "yearFounded" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "workInviteSentToUserId" : {
          "type" : "string",
          "readOnly" : true
        },
        "inVendorSearch" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "vendorScorecard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Scorecard"
        },
        "companyVendorScorecard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Scorecard"
        },
        "createdOn" : {
          "type" : "string",
          "readOnly" : true
        },
        "employees" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "buyerScorecard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/BuyerScorecard"
        },
        "talentPools" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/TalentPool"
          }
        },
        "talentPoolMemberships" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/TalentPool"
          }
        },
        "avatarUUID" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "CompanyWorkers" : {
      "type" : "object",
      "properties" : {
        "workers" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Worker"
          }
        }
      }
    },
    "Complete" : {
      "type" : "object",
      "properties" : {
        "resolution" : {
          "type" : "string",
          "readOnly" : true
        },
        "overrideMinutesWorked" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "units" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "additionalExpenses" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "overridePrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "taxPercent" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "workPhone" : {
          "type" : "string",
          "readOnly" : true
        },
        "workPhoneExtension" : {
          "type" : "string",
          "readOnly" : true
        },
        "mobilePhone" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Coordinate" : {
      "type" : "object",
      "properties" : {
        "longitude" : {
          "type" : "number",
          "format" : "double"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Create User" : {
      "type" : "object",
      "properties" : {
        "userNumber" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "workPhoneExtension" : {
          "type" : "string"
        },
        "workPhoneInternationalCode" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "spendLimit" : {
          "type" : "number"
        },
        "roleSettings" : {
          "$ref" : "#/definitions/RoleSettings"
        },
        "permissionSettings" : {
          "$ref" : "#/definitions/PermissionSettings"
        },
        "workStatus" : {
          "type" : "string"
        },
        "userStatusType" : {
          "type" : "string"
        },
        "orgUnitUuids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateCompanyRequest" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "userEmail" : {
          "type" : "string"
        },
        "locale" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "workPhone" : {
          "$ref" : "#/definitions/PhoneNumber"
        },
        "companyName" : {
          "type" : "string"
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "termsAgree" : {
          "type" : "boolean"
        },
        "pictureUrl" : {
          "type" : "string"
        },
        "campaignId" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "function" : {
          "type" : "string"
        }
      }
    },
    "CreateCompanyResponse" : {
      "type" : "object",
      "properties" : {
        "userUuid" : {
          "type" : "string"
        },
        "userNumber" : {
          "type" : "string"
        },
        "companyUuid" : {
          "type" : "string"
        },
        "companyNumber" : {
          "type" : "string"
        }
      }
    },
    "CreateNewWorkerResponse" : {
      "type" : "object",
      "properties" : {
        "userNumber" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "CreateWorkerRequest" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "secondaryEmail" : {
          "type" : "string",
          "readOnly" : true
        },
        "password" : {
          "type" : "string",
          "readOnly" : true
        },
        "locale" : {
          "type" : "string",
          "readOnly" : true
        },
        "jobTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "recruitingCampaignId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "companyName" : {
          "type" : "string",
          "readOnly" : true
        },
        "address1" : {
          "type" : "string",
          "readOnly" : true
        },
        "address2" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "longitude" : {
          "type" : "number",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "readOnly" : true
        },
        "industryId" : {
          "type" : "string",
          "readOnly" : true
        },
        "onboardingNotificationStrategy" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "DEFAULT", "SUPPRESS", "PASSWORD_RESET" ]
        }
      }
    },
    "CreditCardPayment" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardType" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardExpirationMonth" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardExpirationYear" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardSecurityCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "nameOnCard" : {
          "type" : "string",
          "readOnly" : true
        },
        "location" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Location"
        }
      }
    },
    "CreditCardPaymentResponse" : {
      "type" : "object",
      "properties" : {
        "approved" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "responseMessage" : {
          "type" : "string",
          "readOnly" : true
        },
        "creditCardTransactionId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "creditCardFeeTransactionId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "CsvDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "CustomField" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "value" : {
          "type" : "string",
          "readOnly" : true
        },
        "defaultValue" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibleToResource" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "visibleToOwner" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "required" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        },
        "readOnly" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "showOnPrintout" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "showInAssignmentHeader" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "showOnSentStatus" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "CustomFieldGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "required" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "position" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "fields" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/CustomField"
          }
        }
      }
    },
    "CustomFieldsUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomField"
          }
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomFieldGroup"
          }
        }
      }
    },
    "DashboardResource" : {
      "type" : "object",
      "properties" : {
        "resourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceUserNumber" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "resourceFirstName" : {
          "type" : "string"
        },
        "resourceLastName" : {
          "type" : "string"
        },
        "resourceCompanyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceCompanyName" : {
          "type" : "string"
        },
        "mobilePhone" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "filteredOn" : {
          "type" : "boolean"
        },
        "setUserName" : {
          "type" : "boolean"
        },
        "setResourceId" : {
          "type" : "boolean"
        },
        "setResourceUserNumber" : {
          "type" : "boolean"
        },
        "setResourceFirstName" : {
          "type" : "boolean"
        },
        "setResourceLastName" : {
          "type" : "boolean"
        },
        "setResourceCompanyId" : {
          "type" : "boolean"
        },
        "setResourceCompanyName" : {
          "type" : "boolean"
        }
      }
    },
    "DataDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "count" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "data" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/Cell"
            }
          }
        }
      }
    },
    "Decider" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "criteria" : {
          "type" : "string",
          "readOnly" : true
        },
        "deciderMatcher" : {
          "readOnly" : true,
          "$ref" : "#/definitions/DeciderMatcher"
        }
      }
    },
    "DeciderMatcher" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "INDIVIDUAL_USER" ]
        },
        "autocompleteTarget" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Decision" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "decider" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Decider"
        },
        "decisionResult" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OPEN", "TRUE", "FALSE", "CANCELLED", "SKIPPED" ]
        }
      }
    },
    "DecisionFlow" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "namespace" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "activatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "decisionSteps" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/DecisionStep"
          }
        }
      }
    },
    "DecisionStep" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "quorumType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "UNANIMOUS" ]
        },
        "decisionVerb" : {
          "type" : "string",
          "readOnly" : true
        },
        "decisions" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Decision"
          }
        }
      }
    },
    "DeclineWork" : {
      "type" : "object",
      "properties" : {
        "successful" : {
          "type" : "boolean",
          "description" : "successful",
          "readOnly" : true
        }
      }
    },
    "Deliverable" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "numberOfFiles" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "DeliverablesGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "instructions" : {
          "type" : "string",
          "readOnly" : true
        },
        "hoursToComplete" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "deliverables" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/Deliverable"
          }
        }
      }
    },
    "Descriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "containingType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "nestedTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Descriptor"
          }
        },
        "enumTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnumDescriptor"
          }
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldDescriptor"
          }
        },
        "extensions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldDescriptor"
          }
        },
        "oneofs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OneofDescriptor"
          }
        },
        "extendable" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/MessageOptions"
        }
      }
    },
    "Document" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "uploaded" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "visibilityType" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "EmptyResponse" : {
      "type" : "object",
      "description" : "Signals an empty response. Please see HTTP status codes for success or failure."
    },
    "EnumDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "containingType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnumValueDescriptor"
          }
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/EnumOptions"
        }
      }
    },
    "EnumOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/EnumOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "allowAlias" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "EnumValueDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "type" : {
          "$ref" : "#/definitions/EnumDescriptor"
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/EnumValueOptions"
        }
      }
    },
    "EnumValueOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/EnumValueOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "Environment" : {
      "type" : "object",
      "properties" : {
        "defaultProfiles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "activeProfiles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ErrorsDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "count" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "errors" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApiBaseError"
            }
          }
        }
      }
    },
    "FeedRequest" : {
      "type" : "object",
      "properties" : {
        "keyword" : {
          "type" : "string",
          "readOnly" : true
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "radius" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "virtual" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "fields" : {
          "type" : "string",
          "readOnly" : true
        },
        "when" : {
          "type" : "string",
          "readOnly" : true
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "sortByDistance" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "filterOutApplied" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "sort" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "startDate" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "endDate" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "filter" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "FieldDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "jsonName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "extensionScope" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "DOUBLE", "FLOAT", "INT64", "UINT64", "INT32", "FIXED64", "FIXED32", "BOOL", "STRING", "GROUP", "MESSAGE", "BYTES", "UINT32", "ENUM", "SFIXED32", "SFIXED64", "SINT32", "SINT64" ]
        },
        "containingType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "messageType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "containingOneof" : {
          "$ref" : "#/definitions/OneofDescriptor"
        },
        "enumType" : {
          "$ref" : "#/definitions/EnumDescriptor"
        },
        "defaultValue" : {
          "type" : "object"
        },
        "liteJavaType" : {
          "type" : "string",
          "enum" : [ "INT", "LONG", "FLOAT", "DOUBLE", "BOOLEAN", "STRING", "BYTE_STRING", "ENUM", "MESSAGE" ]
        },
        "liteType" : {
          "type" : "string",
          "enum" : [ "DOUBLE", "FLOAT", "INT64", "UINT64", "INT32", "FIXED64", "FIXED32", "BOOL", "STRING", "GROUP", "MESSAGE", "BYTES", "UINT32", "ENUM", "SFIXED32", "SFIXED64", "SINT32", "SINT64" ]
        },
        "packable" : {
          "type" : "boolean"
        },
        "javaType" : {
          "type" : "string",
          "enum" : [ "INT", "LONG", "FLOAT", "DOUBLE", "BOOLEAN", "STRING", "BYTE_STRING", "ENUM", "MESSAGE" ]
        },
        "mapField" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "options" : {
          "$ref" : "#/definitions/FieldOptions"
        },
        "required" : {
          "type" : "boolean"
        },
        "optional" : {
          "type" : "boolean"
        },
        "packed" : {
          "type" : "boolean"
        },
        "extension" : {
          "type" : "boolean"
        },
        "repeated" : {
          "type" : "boolean"
        }
      }
    },
    "FieldOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "packed" : {
          "type" : "boolean"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/FieldOptions"
        },
        "ctype" : {
          "type" : "string",
          "enum" : [ "STRING", "CORD", "STRING_PIECE" ]
        },
        "jstype" : {
          "type" : "string",
          "enum" : [ "JS_NORMAL", "JS_STRING", "JS_NUMBER" ]
        },
        "lazy" : {
          "type" : "boolean"
        },
        "weak" : {
          "type" : "boolean"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "FileDescriptor" : {
      "type" : "object",
      "properties" : {
        "messageTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Descriptor"
          }
        },
        "enumTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnumDescriptor"
          }
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceDescriptor"
          }
        },
        "extensions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldDescriptor"
          }
        },
        "dependencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FileDescriptor"
          }
        },
        "publicDependencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FileDescriptor"
          }
        },
        "syntax" : {
          "type" : "string",
          "enum" : [ "UNKNOWN", "PROTO2", "PROTO3" ]
        },
        "name" : {
          "type" : "string"
        },
        "package" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "options" : {
          "$ref" : "#/definitions/FileOptions"
        },
        "fullName" : {
          "type" : "string"
        }
      }
    },
    "FileOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "javaStringCheckUtf8" : {
          "type" : "boolean"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/FileOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "javaPackage" : {
          "type" : "string"
        },
        "javaPackageBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "javaOuterClassname" : {
          "type" : "string"
        },
        "javaOuterClassnameBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "javaMultipleFiles" : {
          "type" : "boolean"
        },
        "javaGenerateEqualsAndHash" : {
          "type" : "boolean"
        },
        "optimizeFor" : {
          "type" : "string",
          "enum" : [ "SPEED", "CODE_SIZE", "LITE_RUNTIME" ]
        },
        "goPackage" : {
          "type" : "string"
        },
        "goPackageBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "ccGenericServices" : {
          "type" : "boolean"
        },
        "javaGenericServices" : {
          "type" : "boolean"
        },
        "pyGenericServices" : {
          "type" : "boolean"
        },
        "ccEnableArenas" : {
          "type" : "boolean"
        },
        "objcClassPrefix" : {
          "type" : "string"
        },
        "objcClassPrefixBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "csharpNamespace" : {
          "type" : "string"
        },
        "csharpNamespaceBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "javananoUseDeprecatedPackage" : {
          "type" : "boolean"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "FulfillmentPayloadDTO" : {
      "type" : "object",
      "properties" : {
        "payload" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/ApiV2Pagination"
        },
        "message" : {
          "type" : "string"
        },
        "successful" : {
          "type" : "boolean"
        }
      }
    },
    "GeoPoint" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        }
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Group name",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Group description",
          "readOnly" : true
        },
        "memberCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total number of active members",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "string",
          "description" : "Creation date",
          "readOnly" : true
        },
        "industryName" : {
          "type" : "string",
          "description" : "Group industry",
          "readOnly" : true
        },
        "ownerFullName" : {
          "type" : "string",
          "description" : "Group's owner name",
          "readOnly" : true
        },
        "companyEffectiveName" : {
          "type" : "string",
          "description" : "Group's company name",
          "readOnly" : true
        },
        "avatarLarge" : {
          "type" : "string",
          "description" : "Group's company logo",
          "readOnly" : true
        },
        "membership" : {
          "description" : "Current user group membership",
          "readOnly" : true,
          "$ref" : "#/definitions/GroupMembership"
        }
      },
      "description" : "A worker group"
    },
    "GroupInvitation" : {
      "type" : "object",
      "properties" : {
        "requestDate" : {
          "type" : "string",
          "description" : "Request date",
          "readOnly" : true
        },
        "requesterFullName" : {
          "type" : "string",
          "description" : "Full name of the user who made the request",
          "readOnly" : true
        }
      },
      "description" : "A worker group membership invitation"
    },
    "GroupMembership" : {
      "type" : "object",
      "properties" : {
        "invitation" : {
          "description" : "Invitation made to join this group",
          "readOnly" : true,
          "$ref" : "#/definitions/GroupInvitation"
        },
        "requirements" : {
          "type" : "array",
          "description" : "Group membership requirements",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GroupRequirement"
          }
        },
        "isMember" : {
          "type" : "boolean",
          "description" : "If current user is member of this group",
          "readOnly" : true
        },
        "isEligible" : {
          "type" : "boolean",
          "description" : "If current user is eligible to join this group",
          "readOnly" : true
        }
      },
      "description" : "A worker group membership"
    },
    "GroupRequirement" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Requirement name",
          "readOnly" : true
        },
        "typeName" : {
          "type" : "string",
          "description" : "Requirement type name",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "description" : "Requirement URL action",
          "readOnly" : true
        },
        "isMet" : {
          "type" : "boolean",
          "description" : "If this requirement is met by the current user",
          "readOnly" : true
        }
      },
      "description" : "A worker group requirement"
    },
    "Highlights" : {
      "type" : "object",
      "properties" : {
        "certifications" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "skills" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "licenses" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Image" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "readOnly" : true
        },
        "image" : {
          "type" : "string",
          "readOnly" : true
        },
        "filename" : {
          "type" : "string",
          "readOnly" : true
        },
        "coordinates" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ImageCoordinates"
        }
      }
    },
    "ImageCoordinates" : {
      "type" : "object",
      "properties" : {
        "x" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        },
        "y" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        },
        "x2" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1
        },
        "y2" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1
        }
      }
    },
    "JobTitle" : {
      "type" : "object",
      "properties" : {
        "Unique UUID" : {
          "type" : "string",
          "example" : "e44cc935-0813-4198-baa3-b3cb70a32e7e",
          "readOnly" : true
        },
        "Job title name" : {
          "type" : "string",
          "example" : "Senior VP",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "example" : "JOBTITLE",
          "description" : "Qualification type",
          "readOnly" : true,
          "enum" : [ "SKILL", "SPECIALTY", "JOBTITLE" ]
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "number" : {
          "type" : "string",
          "readOnly" : true
        },
        "addressLine1" : {
          "type" : "string",
          "readOnly" : true
        },
        "addressLine2" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "zip" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "locationType" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "instructions" : {
          "type" : "string",
          "readOnly" : true
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "clientCompanyId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "contact" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Contact"
        },
        "secondaryContact" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Contact"
        },
        "locationMode" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "MappingDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "property" : {
          "type" : "string",
          "readOnly" : true
        },
        "header" : {
          "type" : "string",
          "readOnly" : true
        },
        "position" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "MappingsDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "mappings" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/MappingDTO"
          }
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "parserForType" : {
          "type" : "object"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/MessageLite"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString" : {
          "type" : "string"
        }
      }
    },
    "MessageLite" : {
      "type" : "object",
      "properties" : {
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/MessageLite"
        },
        "initialized" : {
          "type" : "boolean"
        }
      }
    },
    "MessageOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "messageSetWireFormat" : {
          "type" : "boolean"
        },
        "mapEntry" : {
          "type" : "boolean"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/MessageOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "noStandardDescriptorAccessor" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "MethodDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "service" : {
          "$ref" : "#/definitions/ServiceDescriptor"
        },
        "inputType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "outputType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/MethodOptions"
        }
      }
    },
    "MethodOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/MethodOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "NamePart" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/NamePart"
        },
        "namePartBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "isExtension" : {
          "type" : "boolean"
        },
        "namePart" : {
          "type" : "string"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        }
      }
    },
    "NamePartOrBuilder" : {
      "type" : "object",
      "properties" : {
        "namePartBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "isExtension" : {
          "type" : "boolean"
        },
        "namePart" : {
          "type" : "string"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/Message"
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "initialized" : {
          "type" : "boolean"
        }
      }
    },
    "NationalId" : {
      "type" : "object",
      "properties" : {
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "countryId" : {
          "type" : "string",
          "readOnly" : true
        },
        "englishName" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Negotiation" : {
      "type" : "object",
      "properties" : {
        "flatPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "perHour" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "initialHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "perAdditionalHour" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxAdditionalHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "perUnit" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxUnits" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "blendedPerHour" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "internal" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "bonus" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "reimbursement" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "note" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "OneofDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "containingType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "fieldCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FieldDescriptor"
          }
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "OrgUnitDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "example" : "e44cc935-0813-4198-baa3-b3cb70a32e7e",
          "description" : "Unique UUID.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Magazine",
          "description" : "Org unit name",
          "readOnly" : true
        },
        "paths" : {
          "type" : "array",
          "example" : "[COMPANY B, Magazine, Mag-T]",
          "description" : "Paths",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "OrgUnitPath" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "uuidBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "nameBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/OrgUnitPath"
        },
        "pathList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "pathCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "uuid" : {
          "type" : "string"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        }
      }
    },
    "Parser" : {
      "type" : "object"
    },
    "PaymentConfiguration" : {
      "type" : "object",
      "properties" : {
        "offlinePaymentEnabled" : {
          "type" : "boolean"
        },
        "workFeePercentage" : {
          "type" : "number",
          "readOnly" : true
        },
        "subscribed" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "assignmentPricingType" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "PaymentDTO" : {
      "type" : "object",
      "required" : [ "addressTypeCode", "city", "country" ],
      "properties" : {
        "addressId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "city" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "state" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 9
        },
        "country" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 45
        },
        "addressTypeCode" : {
          "type" : "string"
        },
        "locationTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dressCodeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latitude" : {
          "type" : "number"
        },
        "longitude" : {
          "type" : "number"
        },
        "paymentType" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "cardNumber" : {
          "type" : "string"
        },
        "cardExpirationMonth" : {
          "type" : "string"
        },
        "cardExpirationYear" : {
          "type" : "string"
        },
        "cardSecurityCode" : {
          "type" : "string"
        },
        "nameOnCard" : {
          "type" : "string"
        },
        "cardExpirationDateString" : {
          "type" : "string"
        },
        "creditCard" : {
          "type" : "boolean"
        },
        "firstNameOnCard" : {
          "type" : "string"
        },
        "lastNameOnCard" : {
          "type" : "string"
        },
        "account" : {
          "type" : "boolean"
        },
        "latLongSet" : {
          "type" : "boolean"
        },
        "setAddress1" : {
          "type" : "boolean"
        },
        "setAddress2" : {
          "type" : "boolean"
        },
        "setCity" : {
          "type" : "boolean"
        },
        "setState" : {
          "type" : "boolean"
        },
        "setPostalCode" : {
          "type" : "boolean"
        },
        "setCountry" : {
          "type" : "boolean"
        },
        "setAddressTypeCode" : {
          "type" : "boolean"
        },
        "setLocationTypeId" : {
          "type" : "boolean"
        },
        "fullAddress" : {
          "type" : "string"
        },
        "shortAddress" : {
          "type" : "string"
        },
        "addressForGeocoder" : {
          "type" : "string"
        },
        "coordinate" : {
          "$ref" : "#/definitions/Coordinate"
        }
      }
    },
    "PermissionSettings" : {
      "type" : "object",
      "properties" : {
        "paymentAccessible" : {
          "type" : "boolean"
        },
        "fundsAccessible" : {
          "type" : "boolean"
        },
        "counterOfferAccessible" : {
          "type" : "boolean"
        },
        "pricingEditable" : {
          "type" : "boolean"
        },
        "workApprovalAllowed" : {
          "type" : "boolean"
        },
        "projectAccessible" : {
          "type" : "boolean"
        }
      }
    },
    "PersonaMode" : {
      "type" : "object",
      "properties" : {
        "personaMode" : {
          "type" : "string",
          "enum" : [ "BUYER", "SELLER", "DISPATCHER" ]
        }
      }
    },
    "PhoneNumber" : {
      "type" : "object",
      "properties" : {
        "country_code" : {
          "type" : "string",
          "readOnly" : true
        },
        "phone" : {
          "type" : "string",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "WORK", "HOME", "OTHER", "SMS", "MOBILE" ]
        },
        "extension" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PhoneNumberDTO" : {
      "type" : "object",
      "properties" : {
        "entityId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "phone" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "contactContextType" : {
          "type" : "string",
          "enum" : [ "WORK", "HOME", "OTHER", "SMS", "MOBILE" ]
        }
      }
    },
    "Pricing" : {
      "type" : "object",
      "properties" : {
        "offlinePayment" : {
          "type" : "boolean"
        },
        "mode" : {
          "type" : "string",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        },
        "flatPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "perHourPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxNumberOfHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "perUnitPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxNumberOfUnits" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "initialPerHourPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "initialNumberOfHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "additionalPerHourPrice" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "maxBlendedNumberOfHours" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "paymentTermsDays" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "disablePriceNegotiation" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "Profile" : {
      "type" : "object",
      "properties" : {
        "userNumber" : {
          "type" : "string",
          "description" : "Unique identifier for the user who owns this profile",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "description" : "User's first name",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "description" : "User's last name",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "description" : "User's primary email address",
          "readOnly" : true
        },
        "secondaryEmail" : {
          "type" : "string",
          "description" : "User's secondary email address",
          "readOnly" : true
        },
        "avatarUri" : {
          "type" : "string",
          "description" : "User's avatar image uri",
          "readOnly" : true
        },
        "avatar" : {
          "description" : "User's avatar image",
          "readOnly" : true,
          "$ref" : "#/definitions/Image"
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "User's primary phone number",
          "readOnly" : true
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "User's phone numbers - only supports WORK or MOBILE types",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/PhoneNumber"
          }
        },
        "jobTitle" : {
          "type" : "string",
          "description" : "User's job title",
          "readOnly" : true
        },
        "maxTravelDistance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum distance in miles this user is willing to travel for work",
          "readOnly" : true
        },
        "skills" : {
          "type" : "array",
          "description" : "Skills that this user has listed in their profile",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/SkillApiDTO"
          }
        },
        "address" : {
          "description" : "User's primary address",
          "readOnly" : true,
          "$ref" : "#/definitions/Address"
        }
      },
      "description" : "A worker profile"
    },
    "ProjectApiDTO" : {
      "type" : "object",
      "properties" : {
        "projectId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123455,
          "description" : "Project ID. This is a monolith understood identifier; use UUID if you can.",
          "readOnly" : true
        },
        "ownerId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123455,
          "description" : "Owner ID. This is a monolith understood identifier; use UUID if you can.",
          "readOnly" : true
        },
        "clientCompanyId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123455,
          "description" : "Client Company ID. This is a monolith understood identifier; use UUID if you can.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Sample Project",
          "description" : "Project Name.",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "example" : "This project is just an example.",
          "description" : "Project Description.",
          "readOnly" : true
        },
        "dueDate" : {
          "type" : "string",
          "example" : "2017-01-01T00:00:00Z",
          "description" : "Due date. When is this project due or when it is to be completed.",
          "readOnly" : true
        },
        "reservedFundsEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Are reserved funds enabled for this project?",
          "readOnly" : true
        }
      }
    },
    "Qualification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "score" : {
          "type" : "number",
          "format" : "double"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "SKILL", "SPECIALTY", "JOBTITLE" ]
        }
      }
    },
    "Question" : {
      "type" : "object",
      "required" : [ "text" ],
      "properties" : {
        "text" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ReassignUserForm" : {
      "type" : "object",
      "required" : [ "newAssessmentsOwner", "newGroupsOwner", "newWorkOwner" ],
      "properties" : {
        "currentOwner" : {
          "type" : "string"
        },
        "newGroupsOwner" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newAssessmentsOwner" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newWorkOwner" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RecurrenceDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        },
        "frequencyModifier" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "weekdays" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "boolean"
          }
        },
        "repetitions" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "endDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "recurringAssignmentId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "labelId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "Reschedule" : {
      "type" : "object",
      "properties" : {
        "start" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "startWindowBegin" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "startWindowEnd" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "end" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "note" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "RoleSettings" : {
      "type" : "object",
      "properties" : {
        "admin" : {
          "type" : "boolean"
        },
        "manager" : {
          "type" : "boolean"
        },
        "controller" : {
          "type" : "boolean"
        },
        "user" : {
          "type" : "boolean"
        },
        "viewOnly" : {
          "type" : "boolean"
        },
        "staff" : {
          "type" : "boolean"
        },
        "deputy" : {
          "type" : "boolean"
        },
        "dispatcher" : {
          "type" : "boolean"
        },
        "employeeWorker" : {
          "type" : "boolean"
        }
      }
    },
    "Routing" : {
      "type" : "object",
      "properties" : {
        "groupIds" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "resourceNumbers" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "vendorCompanyNumbers" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "assignToFirstToAccept" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "shownInFeed" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "smartRoute" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "firstToAcceptCandidates" : {
          "readOnly" : true,
          "$ref" : "#/definitions/RoutingCandidates"
        },
        "needToApplyCandidates" : {
          "readOnly" : true,
          "$ref" : "#/definitions/RoutingCandidates"
        }
      }
    },
    "RoutingCandidates" : {
      "type" : "object",
      "properties" : {
        "groupIds" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "resourceNumbers" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "vendorCompanyNumbers" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RowsDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "count" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "rows" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "SaveCustomFields" : {
      "type" : "object",
      "properties" : {
        "customFields" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/CustomFieldGroup"
          }
        }
      }
    },
    "Schedule" : {
      "type" : "object",
      "properties" : {
        "range" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "from" : {
          "type" : "string",
          "readOnly" : true
        },
        "through" : {
          "type" : "string",
          "readOnly" : true
        },
        "confirmationRequired" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "confirmationLeadTime" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "checkinRequired" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "checkinCallRequired" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "checkinContactName" : {
          "type" : "string",
          "readOnly" : true
        },
        "checkinContactPhone" : {
          "type" : "string",
          "readOnly" : true
        },
        "checkoutNoteDisplayed" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "checkoutNote" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Scorecard" : {
      "type" : "object",
      "properties" : {
        "workCompletedCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "workCancelledCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "workAbandonedCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "onTimePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "deliverableOnTimePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "satisfactionRate" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "ScreeningDTO" : {
      "type" : "object",
      "required" : [ "addressTypeCode", "city", "country" ],
      "properties" : {
        "addressId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "address1" : {
          "type" : "string"
        },
        "address2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "city" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "state" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 9
        },
        "country" : {
          "type" : "string",
          "minLength" : 2,
          "maxLength" : 45
        },
        "addressTypeCode" : {
          "type" : "string"
        },
        "locationTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dressCodeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "latitude" : {
          "type" : "number"
        },
        "longitude" : {
          "type" : "number"
        },
        "screeningId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "maidenName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "phone" : {
          "$ref" : "#/definitions/PhoneNumberDTO"
        },
        "mobilePhone" : {
          "$ref" : "#/definitions/PhoneNumberDTO"
        },
        "birthDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthMonth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "birthYear" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateOfBirth" : {
          "type" : "string"
        },
        "workIdentificationNumber" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "referenceId" : {
          "type" : "string"
        },
        "screeningType" : {
          "type" : "string"
        },
        "vendorName" : {
          "type" : "string"
        },
        "latLongSet" : {
          "type" : "boolean"
        },
        "setAddress1" : {
          "type" : "boolean"
        },
        "setAddress2" : {
          "type" : "boolean"
        },
        "setCity" : {
          "type" : "boolean"
        },
        "setState" : {
          "type" : "boolean"
        },
        "setPostalCode" : {
          "type" : "boolean"
        },
        "setCountry" : {
          "type" : "boolean"
        },
        "setAddressTypeCode" : {
          "type" : "boolean"
        },
        "setLocationTypeId" : {
          "type" : "boolean"
        },
        "fullAddress" : {
          "type" : "string"
        },
        "shortAddress" : {
          "type" : "string"
        },
        "addressForGeocoder" : {
          "type" : "string"
        },
        "coordinate" : {
          "$ref" : "#/definitions/Coordinate"
        }
      }
    },
    "ScreeningWithPayment" : {
      "type" : "object",
      "required" : [ "payment", "screening" ],
      "properties" : {
        "screening" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ScreeningDTO"
        },
        "payment" : {
          "readOnly" : true,
          "$ref" : "#/definitions/PaymentDTO"
        }
      }
    },
    "ServiceDescriptor" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "file" : {
          "$ref" : "#/definitions/FileDescriptor"
        },
        "methods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MethodDescriptor"
          }
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "$ref" : "#/definitions/ServiceOptions"
        }
      }
    },
    "ServiceOptions" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/ServiceOptions"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "uninterpretedOptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "allFieldsRaw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "SettingsCompleteness" : {
      "type" : "object",
      "properties" : {
        "percentage" : {
          "type" : "number",
          "format" : "float",
          "readOnly" : true
        },
        "completedActions" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "OVERVIEW", "BANK", "FUNDS", "TAX", "ASSIGNMENT_SETTINGS" ]
          }
        },
        "missingActions" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "OVERVIEW", "BANK", "FUNDS", "TAX", "ASSIGNMENT_SETTINGS" ]
          }
        }
      }
    },
    "SettingsDTO" : {
      "type" : "object",
      "properties" : {
        "templateId" : {
          "type" : "string",
          "readOnly" : true
        },
        "labelId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "Shipment" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "trackingNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "trackingStatus" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PENDING", "NOT_SHIPPED", "IN_TRANSIT", "DELIVERED", "UNRECOGNIZED", "NOT_AVAILABLE" ]
        },
        "shippingProvider" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OTHER", "UPS", "USPS", "FEDEX", "DHL" ]
        },
        "value" : {
          "type" : "number",
          "readOnly" : true
        },
        "isReturn" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "ShipmentGroup" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "returnShipment" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "suppliedByWorker" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "shippingDestinationType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NONE", "WORKER", "ONSITE", "PICKUP" ]
        },
        "shipToAddress" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Location"
        },
        "returnAddress" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Location"
        },
        "shipments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Shipment"
          }
        }
      }
    },
    "SignableEsignatureResponseDTO" : {
      "type" : "object",
      "properties" : {
        "clientId" : {
          "type" : "string"
        },
        "signingUrl" : {
          "type" : "string"
        }
      }
    },
    "SignedEsignatureResponseDTO" : {
      "type" : "object",
      "properties" : {
        "executedUrl" : {
          "type" : "string"
        }
      }
    },
    "SkillApiDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "example" : "e44cc935-0813-4198-baa3-b3cb70a32e7e",
          "description" : "Unique UUID. This is the preferred ID for a Skill and is preferred over 'id'.",
          "readOnly" : true
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123455,
          "description" : "Unique ID. This is a monolith understood identifier; use UUID if you can.",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Project Management",
          "description" : "Skill name",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "example" : "SKILL",
          "description" : "Qualification type",
          "readOnly" : true,
          "enum" : [ "SKILL", "SPECIALTY", "JOBTITLE" ]
        }
      }
    },
    "SkillDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SkillRecommenderDTO" : {
      "type" : "object",
      "properties" : {
        "jobTitle" : {
          "type" : "string"
        },
        "industries" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "removedSkills" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "definedSkills" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "selectedSkills" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "assignmentTitle" : {
          "type" : "string"
        },
        "assignmentDescription" : {
          "type" : "string"
        }
      }
    },
    "StatusDTO" : {
      "type" : "object",
      "properties" : {
        "step" : {
          "type" : "string",
          "readOnly" : true
        },
        "remaining" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Survey" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "required" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "TalentPool" : {
      "type" : "object"
    },
    "TaxInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "companyNumber" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "taxCountry" : {
          "type" : "string",
          "readOnly" : true
        },
        "activeFlag" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "taxNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "taxEntityTypeCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "activeDateString" : {
          "type" : "string",
          "readOnly" : true
        },
        "taxName" : {
          "type" : "string",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "middleName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "businessFlag" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "taxVerificationStatusCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "verificationPending" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "deliveryPolicyFlag" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "businessName" : {
          "type" : "string",
          "readOnly" : true
        },
        "businessNameFlag" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "effectiveDateString" : {
          "type" : "string",
          "readOnly" : true
        },
        "signature" : {
          "type" : "string",
          "readOnly" : true
        },
        "signatureDateString" : {
          "type" : "string",
          "readOnly" : true
        },
        "countryOfIncorporation" : {
          "type" : "string",
          "readOnly" : true
        },
        "foreignStatusAcceptedFlag" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "TaxInfoSave" : {
      "type" : "object",
      "properties" : {
        "fullName" : {
          "type" : "string"
        },
        "taxEntityTypeCode" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "INDIVIDUAL", "CORP", "C_CORP", "S_CORP", "PARTNER", "OTHER", "LLC_CORPORATION", "LLC_C_CORPORATION", "LLC_S_CORPORATION", "LLC_DISREGARDED", "LLC_PARTNERSHIP", "TRUST", "EXEMPT", "NONE" ]
        },
        "agreeToTerms" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "businessAsName" : {
          "type" : "string",
          "readOnly" : true
        },
        "companyName" : {
          "type" : "string",
          "readOnly" : true
        },
        "effectiveDate" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "signature" : {
          "type" : "string",
          "readOnly" : true
        },
        "signatureDate" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "countryOfIncorporation" : {
          "type" : "string",
          "readOnly" : true
        },
        "foreignStatusAccepted" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "USA", "CANADA", "OTHER" ]
        },
        "business" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "taxNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "middleName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "Template" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/Template"
        },
        "id" : {
          "type" : "string"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "title" : {
          "type" : "string"
        },
        "idBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "titleBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        }
      }
    },
    "UninterpretedOption" : {
      "type" : "object",
      "properties" : {
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "type" : "object"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/UninterpretedOption"
        },
        "nameList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue" : {
          "type" : "string"
        },
        "identifierValueBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "positiveIntValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "negativeIntValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stringValue" : {
          "$ref" : "#/definitions/ByteString"
        },
        "aggregateValue" : {
          "type" : "string"
        },
        "aggregateValueBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "nameCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "initialized" : {
          "type" : "boolean"
        },
        "doubleValue" : {
          "type" : "number",
          "format" : "double"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "initializationErrorString" : {
          "type" : "string"
        }
      }
    },
    "UninterpretedOptionOrBuilder" : {
      "type" : "object",
      "properties" : {
        "nameList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue" : {
          "type" : "string"
        },
        "identifierValueBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "positiveIntValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "negativeIntValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stringValue" : {
          "$ref" : "#/definitions/ByteString"
        },
        "aggregateValue" : {
          "type" : "string"
        },
        "aggregateValueBytes" : {
          "$ref" : "#/definitions/ByteString"
        },
        "nameCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "doubleValue" : {
          "type" : "number",
          "format" : "double"
        },
        "allFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/Message"
        },
        "descriptorForType" : {
          "$ref" : "#/definitions/Descriptor"
        },
        "unknownFields" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString" : {
          "type" : "string"
        },
        "initialized" : {
          "type" : "boolean"
        }
      }
    },
    "UnknownFieldSet" : {
      "type" : "object",
      "properties" : {
        "serializedSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parserForType" : {
          "$ref" : "#/definitions/Parser"
        },
        "defaultInstanceForType" : {
          "$ref" : "#/definitions/UnknownFieldSet"
        },
        "serializedSizeAsMessageSet" : {
          "type" : "integer",
          "format" : "int32"
        },
        "initialized" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateAsset" : {
      "type" : "object",
      "required" : [ "data" ],
      "properties" : {
        "data" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "userNumber" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "workPhoneExtension" : {
          "type" : "string"
        },
        "workPhoneInternationalCode" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "industryId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "spendLimit" : {
          "type" : "number"
        },
        "roleSettings" : {
          "$ref" : "#/definitions/RoleSettings"
        },
        "permissionSettings" : {
          "$ref" : "#/definitions/PermissionSettings"
        },
        "workStatus" : {
          "type" : "string"
        },
        "userStatusType" : {
          "type" : "string"
        },
        "orgUnitUuids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UserDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uuid" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "recruitingCampaignId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "spendLimit" : {
          "type" : "number"
        },
        "salary" : {
          "type" : "number"
        },
        "stockOptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "operatingAsIndividualFlag" : {
          "type" : "boolean"
        },
        "emailConfirmed" : {
          "type" : "boolean"
        },
        "secondaryEmail" : {
          "type" : "string"
        },
        "planCode" : {
          "type" : "string"
        },
        "networkId" : {
          "type" : "string"
        },
        "mobilePhone" : {
          "type" : "string"
        },
        "resumeUrl" : {
          "type" : "string"
        },
        "warpRequisitionId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Verification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "checkDate" : {
          "type" : "string"
        }
      }
    },
    "VerifyPaymentAccount" : {
      "type" : "object",
      "properties" : {
        "Deposit Amount 1" : {
          "type" : "string",
          "example" : ".02",
          "readOnly" : true
        },
        "Deposit Amount 2" : {
          "type" : "string",
          "example" : ".05",
          "readOnly" : true
        }
      }
    },
    "W9PdfPreview" : {
      "type" : "object",
      "properties" : {
        "fullName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "middleName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "taxNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "taxEntityTypeCode" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "INDIVIDUAL", "CORP", "C_CORP", "S_CORP", "PARTNER", "OTHER", "LLC_CORPORATION", "LLC_C_CORPORATION", "LLC_S_CORPORATION", "LLC_DISREGARDED", "LLC_PARTNERSHIP", "TRUST", "EXEMPT", "NONE" ]
        },
        "business" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "companyName" : {
          "type" : "string",
          "readOnly" : true
        },
        "businessAsName" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "WithdrawalRequest" : {
      "type" : "object",
      "required" : [ "account", "amount" ],
      "properties" : {
        "account" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "amount" : {
          "type" : "number",
          "readOnly" : true,
          "minimum" : 0.01,
          "exclusiveMinimum" : false
        }
      }
    },
    "WorkDetailsRequest" : {
      "type" : "object",
      "properties" : {
        "viewType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "search_card" ]
        },
        "uuids" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WorkStatusType" : {
      "type" : "object",
      "required" : [ "clientVisible", "employeeVisible", "resourceVisible" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "clientVisible" : {
          "type" : "boolean"
        },
        "employeeVisible" : {
          "type" : "boolean"
        },
        "resourceVisible" : {
          "type" : "boolean"
        },
        "complete" : {
          "type" : "boolean"
        },
        "employeeFormatted" : {
          "type" : "string"
        },
        "voidOrCancelled" : {
          "type" : "boolean"
        },
        "paid" : {
          "type" : "boolean"
        },
        "draft" : {
          "type" : "boolean"
        },
        "sent" : {
          "type" : "boolean"
        }
      }
    },
    "Worker" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "userNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatarAssetUri" : {
          "type" : "string",
          "readOnly" : true
        },
        "jobTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "companyName" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true
        },
        "postalCode" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "lane" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "verifications" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Verification"
          }
        },
        "blocked" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "certifications" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "insurances" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "licenses" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "companyAssessments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "languages" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "skills" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "scorecard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Scorecard"
        },
        "companyScorecard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Scorecard"
        },
        "createdOn" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "WorkerSearchRecord" : {
      "type" : "object",
      "properties" : {
        "highlights" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Highlights"
        },
        "score" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "uuid" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "WORKER", "VENDOR" ]
        }
      }
    },
    "WorkerSearchRequest" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "sortType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "distance", "name", "rating", "hourly_rate", "work_completed", "created_on", "relevance" ]
        },
        "sortDirection" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "asc", "desc" ]
        },
        "work_number" : {
          "type" : "string",
          "readOnly" : true
        },
        "keyword" : {
          "type" : "string",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "radius" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "countries" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "sharedGroups" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "lanes" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "lane0", "lane1", "lane2", "lane3", "lane4" ]
          }
        },
        "verifications" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "background_check", "drug_test", "background_check_last_6months", "background_check_last_12months", "drug_test_last_6months", "drug_test_last_12months" ]
          }
        },
        "assessments" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "certifications" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "licenses" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "industries" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "companies" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "companyTypes" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "corporation", "sole_proprietor" ]
          }
        },
        "satisfactionRate" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "onTimePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "deliverableOnTimePercentage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "workersCompCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "generalLiabilityCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "errorsAndOmissionsCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "automobileCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "contractorsCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "commercialGeneralLiabilityCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "businessLiabilityCoverage" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "WorkersSearchRequest" : {
      "type" : "object",
      "properties" : {
        "keyword" : {
          "type" : "string",
          "readOnly" : true
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "sortby" : {
          "type" : "string",
          "readOnly" : true
        },
        "order" : {
          "type" : "string",
          "readOnly" : true
        },
        "radius" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "address" : {
          "type" : "string",
          "readOnly" : true
        },
        "countries" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "industries" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      }
    },
    "WorkersSearchResult" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "jobTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "userNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "company" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Company"
        },
        "certifications" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "insurances" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "lastBackgroundCheckDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastDrugTestDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastAssignedWorkDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "workPhone" : {
          "type" : "string",
          "readOnly" : true
        },
        "mobilePhone" : {
          "type" : "string",
          "readOnly" : true
        },
        "address" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Address"
        },
        "smallAvatarAssetUri" : {
          "type" : "string",
          "readOnly" : true
        },
        "skillNames" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "scoreCard" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Scorecard"
        },
        "toolNames" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "meta" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP status code of this response"
        },
        "responseTime" : {
          "type" : "number",
          "format" : "double",
          "description" : "Server response time in seconds"
        },
        "clientRequestId" : {
          "type" : "string",
          "description" : "Unique id provided by client"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Request start time in seconds from epoch"
        },
        "requestId" : {
          "type" : "string",
          "description" : "UUID of this request"
        }
      },
      "description" : "Metadata about this request"
    }
  }
}